/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface SlicerAssetsInterface extends utils.Interface {
  contractName: "SlicerAssets";
  functions: {
    "_handle1155Purchase(bytes)": FunctionFragment;
    "_handle721Purchase(bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_handle1155Purchase",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_handle721Purchase",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "_handle1155Purchase",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_handle721Purchase",
    data: BytesLike
  ): Result;

  events: {
    "ERC1155ListingChanged(address,uint256,uint256)": EventFragment;
    "ERC721ListingChanged(address,uint256,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ERC1155ListingChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingChanged"): EventFragment;
}

export type ERC1155ListingChangedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  { contractAddress: string; tokenId: BigNumber; amount: BigNumber }
>;

export type ERC1155ListingChangedEventFilter =
  TypedEventFilter<ERC1155ListingChangedEvent>;

export type ERC721ListingChangedEvent = TypedEvent<
  [string, BigNumber, boolean],
  { contractAddress: string; tokenId: BigNumber; isActive: boolean }
>;

export type ERC721ListingChangedEventFilter =
  TypedEventFilter<ERC721ListingChangedEvent>;

export interface SlicerAssets extends BaseContract {
  contractName: "SlicerAssets";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SlicerAssetsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _handle1155Purchase(
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _handle721Purchase(
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  _handle1155Purchase(
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _handle721Purchase(
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    _handle1155Purchase(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    _handle721Purchase(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ERC1155ListingChanged(address,uint256,uint256)"(
      contractAddress?: string | null,
      tokenId?: null,
      amount?: null
    ): ERC1155ListingChangedEventFilter;
    ERC1155ListingChanged(
      contractAddress?: string | null,
      tokenId?: null,
      amount?: null
    ): ERC1155ListingChangedEventFilter;

    "ERC721ListingChanged(address,uint256,bool)"(
      contractAddress?: string | null,
      tokenId?: null,
      isActive?: null
    ): ERC721ListingChangedEventFilter;
    ERC721ListingChanged(
      contractAddress?: string | null,
      tokenId?: null,
      isActive?: null
    ): ERC721ListingChangedEventFilter;
  };

  estimateGas: {
    _handle1155Purchase(
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _handle721Purchase(
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _handle1155Purchase(
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _handle721Purchase(
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
