/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TickMathLite, TickMathLiteInterface } from "../TickMathLite";

const _abi = [
  {
    inputs: [],
    name: "MAX_TICK",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "weiPrice",
        type: "uint256",
      },
    ],
    name: "getCurrencyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "currencyPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61092e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c806339131852146100505780636882a88814610076578063bbe4f6db14610093575b600080fd5b61006361005e3660046104a8565b6100be565b6040519081526020015b60405180910390f35b610080620d89e881565b60405160029190910b815260200161006d565b6100a66100a13660046104d4565b61031a565b6040516001600160a01b03909116815260200161006d565b6000806100ca8461031a565b90506001600160a01b0381161561030e576000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561011657600080fd5b505afa15801561012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014e9190610507565b90506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561018b57600080fd5b505afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c39190610534565b505050505050905060006002600160601b83633b9aca006101e491906105e5565b6101ee919061062a565b6101f89190610839565b6001600160a01b03169050866001600160a01b0316846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561024657600080fd5b505afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610851565b6001600160a01b0316146102ca5761029783601861086e565b6102a290600a610891565b6102b164e8d4a51000886108a0565b6102bb90836108b4565b6102c591906108a0565b610303565b6102d964e8d4a51000876108a0565b6102e390826108b4565b6102ee8460186108d3565b6102f990600a610891565b61030391906108a0565b945050505050610314565b60009150505b92915050565b604051630b4c774160e11b81526001600160a01b038216600482015273c778417e063141139fce010982780140aa0cd5ab6024820152610bb860448201526000908190731f98431c8ad98523631ae4a59f267346ea31f98490631698ee829060640160206040518083038186803b15801561039457600080fd5b505afa1580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc9190610851565b90506001600160a01b03811661031457604051630b4c774160e11b81526001600160a01b038416600482015273c778417e063141139fce010982780140aa0cd5ab60248201526127106044820152731f98431c8ad98523631ae4a59f267346ea31f98490631698ee829060640160206040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610851565b9392505050565b6001600160a01b03811681146104a557600080fd5b50565b600080604083850312156104bb57600080fd5b82356104c681610490565b946020939093013593505050565b6000602082840312156104e657600080fd5b813561048981610490565b805160ff8116811461050257600080fd5b919050565b60006020828403121561051957600080fd5b610489826104f1565b805161ffff8116811461050257600080fd5b600080600080600080600060e0888a03121561054f57600080fd5b875161055a81610490565b8097505060208801518060020b811461057257600080fd5b955061058060408901610522565b945061058e60608901610522565b935061059c60808901610522565b92506105aa60a089016104f1565b915060c088015180151581146105bf57600080fd5b8091505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b038281168482168115158284048211161561060b5761060b6105cf565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b038381168061064457610644610614565b92169190910492915050565b600181815b80851115610691576001600160a01b03829004821115610677576106776105cf565b8085161561068457918102915b93841c9390800290610655565b509250929050565b600181815b808511156106915781600019048211156106ba576106ba6105cf565b808516156106c757918102915b93841c939080029061069e565b6000826106e357506001610314565b816106f057506000610314565b8160018114610706576002811461071057610744565b6001915050610314565b60ff841115610721576107216105cf565b6001841b91506001600160a01b0382111561073e5761073e6105cf565b50610314565b5060208310610133831016604e8410600b841016171561077e575081810a6001600160a01b03811115610779576107796105cf565b610314565b6107888383610650565b6001600160a01b038190048211156107a2576107a26105cf565b029392505050565b6000826107b957506001610314565b816107c657506000610314565b816001811461070657600281146107dc576107f8565b60ff8411156107ed576107ed6105cf565b50506001821b610314565b5060208310610133831016604e8410600b841016171561081b575081810a610314565b6108258383610699565b80600019048211156107a2576107a26105cf565b600061048960ff84166001600160a01b0384166106d4565b60006020828403121561086357600080fd5b815161048981610490565b600060ff821660ff841680821015610888576108886105cf565b90039392505050565b600061048960ff8416836107aa565b6000826108af576108af610614565b500490565b60008160001904831182151516156108ce576108ce6105cf565b500290565b600060ff821660ff84168060ff038211156108f0576108f06105cf565b01939250505056fea2646970667358221220514b853fb71196a44fc91bae6acfaf7fa2526e8e4492b0079af86d9cadf0764664736f6c63430008080033";

type TickMathLiteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TickMathLiteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TickMathLite__factory extends ContractFactory {
  constructor(...args: TickMathLiteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TickMathLite";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickMathLite> {
    return super.deploy(overrides || {}) as Promise<TickMathLite>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickMathLite {
    return super.attach(address) as TickMathLite;
  }
  connect(signer: Signer): TickMathLite__factory {
    return super.connect(signer) as TickMathLite__factory;
  }
  static readonly contractName: "TickMathLite";
  public readonly contractName: "TickMathLite";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickMathLiteInterface {
    return new utils.Interface(_abi) as TickMathLiteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickMathLite {
    return new Contract(address, _abi, signerOrProvider) as TickMathLite;
  }
}
