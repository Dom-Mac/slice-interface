/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SLCDummy, SLCDummyInterface } from "../SLCDummy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testDummy",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516117d861004c60003960008181610472015281816104bb01528181610599015281816105d9015261066c01526117d86000f3fe6080604052600436106101145760003560e01c806370a08231116100a057806395d89b411161006457806395d89b41146102dd578063a457c2d7146102f2578063a9059cbb14610312578063dd62ed3e14610332578063f2fde38b1461037857600080fd5b806370a0823114610239578063715018a61461026f5780638129fc1c146102845780638ba78c07146102995780638da5cb5b146102b557600080fd5b8063313ce567116100e7578063313ce567146101b35780633659cfe6146101cf57806339509351146101f15780634f1ef2861461021157806352d1902d1461022457600080fd5b806306fdde0314610119578063095ea7b31461014457806318160ddd1461017457806323b872dd14610193575b600080fd5b34801561012557600080fd5b5061012e610398565b60405161013b91906113d3565b60405180910390f35b34801561015057600080fd5b5061016461015f366004611422565b61042a565b604051901515815260200161013b565b34801561018057600080fd5b506035545b60405190815260200161013b565b34801561019f57600080fd5b506101646101ae36600461144c565b610442565b3480156101bf57600080fd5b506040516012815260200161013b565b3480156101db57600080fd5b506101ef6101ea366004611488565b610468565b005b3480156101fd57600080fd5b5061016461020c366004611422565b610550565b6101ef61021f3660046114b9565b61058f565b34801561023057600080fd5b5061018561065f565b34801561024557600080fd5b50610185610254366004611488565b6001600160a01b031660009081526033602052604090205490565b34801561027b57600080fd5b506101ef610712565b34801561029057600080fd5b506101ef610748565b3480156102a557600080fd5b50604051602a815260200161013b565b3480156102c157600080fd5b5060c9546040516001600160a01b03909116815260200161013b565b3480156102e957600080fd5b5061012e610861565b3480156102fe57600080fd5b5061016461030d366004611422565b610870565b34801561031e57600080fd5b5061016461032d366004611422565b61090d565b34801561033e57600080fd5b5061018561034d36600461157b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561038457600080fd5b506101ef610393366004611488565b61091b565b6060603680546103a7906115ae565b80601f01602080910402602001604051908101604052809291908181526020018280546103d3906115ae565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b5050505050905090565b6000336104388185856109b3565b5060019392505050565b600033610450858285610ad7565b61045b858585610b69565b60019150505b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104b95760405162461bcd60e51b81526004016104b0906115e8565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661050260008051602061175c833981519152546001600160a01b031690565b6001600160a01b0316146105285760405162461bcd60e51b81526004016104b090611634565b61053181610d37565b6040805160008082526020820190925261054d91839190610d61565b50565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190610438908290869061058a908790611680565b6109b3565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105d75760405162461bcd60e51b81526004016104b0906115e8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661062060008051602061175c833981519152546001600160a01b031690565b6001600160a01b0316146106465760405162461bcd60e51b81526004016104b090611634565b61064f82610d37565b61065b82826001610d61565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106ff5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104b0565b5060008051602061175c83398151915290565b60c9546001600160a01b0316331461073c5760405162461bcd60e51b81526004016104b0906116a6565b6107466000610ed1565b565b600054610100900460ff166107635760005460ff1615610767565b303b155b6107ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104b0565b600054610100900460ff161580156107ec576000805461ffff19166101011790555b61082e60405180604001604052806005815260200164536c69636560d81b81525060405180604001604052806003815260200162534c4360e81b815250610f23565b610836610f54565b61084d336c0c9f2c9cd04674edea40000000610f83565b801561054d576000805461ff001916905550565b6060603780546103a7906115ae565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156108f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104b0565b61090282868684036109b3565b506001949350505050565b600033610438818585610b69565b60c9546001600160a01b031633146109455760405162461bcd60e51b81526004016104b0906116a6565b6001600160a01b0381166109aa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b0565b61054d81610ed1565b6001600160a01b038316610a155760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b0565b6001600160a01b038216610a765760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b0565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610b635781811015610b565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b0565b610b6384848484036109b3565b50505050565b6001600160a01b038316610bcd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b0565b6001600160a01b038216610c2f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b0565b6001600160a01b03831660009081526033602052604090205481811015610ca75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104b0565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610cde908490611680565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d2a91815260200190565b60405180910390a3610b63565b60c9546001600160a01b0316331461054d5760405162461bcd60e51b81526004016104b0906116a6565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610d9957610d9483611062565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610df3575060408051601f3d908101601f19168201909252610df0918101906116db565b60015b610e565760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104b0565b60008051602061175c8339815191528114610ec55760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104b0565b50610d948383836110fe565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f4a5760405162461bcd60e51b81526004016104b0906116f4565b61065b8282611123565b600054610100900460ff16610f7b5760405162461bcd60e51b81526004016104b0906116f4565b610746611171565b6001600160a01b038216610fd95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b0565b8060356000828254610feb9190611680565b90915550506001600160a01b03821660009081526033602052604081208054839290611018908490611680565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0381163b6110cf5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104b0565b60008051602061175c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611107836111a1565b6000825111806111145750805b15610d9457610b6383836111e1565b600054610100900460ff1661114a5760405162461bcd60e51b81526004016104b0906116f4565b815161115d90603690602085019061130e565b508051610d9490603790602084019061130e565b600054610100900460ff166111985760405162461bcd60e51b81526004016104b0906116f4565b61074633610ed1565b6111aa81611062565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6112495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104b0565b600080846001600160a01b031684604051611264919061173f565b600060405180830381855af49150503d806000811461129f576040519150601f19603f3d011682016040523d82523d6000602084013e6112a4565b606091505b50915091506112cc828260405180606001604052806027815260200161177c602791396112d5565b95945050505050565b606083156112e4575081610461565b8251156112f45782518084602001fd5b8160405162461bcd60e51b81526004016104b091906113d3565b82805461131a906115ae565b90600052602060002090601f01602090048101928261133c5760008555611382565b82601f1061135557805160ff1916838001178555611382565b82800160010185558215611382579182015b82811115611382578251825591602001919060010190611367565b5061138e929150611392565b5090565b5b8082111561138e5760008155600101611393565b60005b838110156113c25781810151838201526020016113aa565b83811115610b635750506000910152565b60208152600082518060208401526113f28160408501602087016113a7565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461141d57600080fd5b919050565b6000806040838503121561143557600080fd5b61143e83611406565b946020939093013593505050565b60008060006060848603121561146157600080fd5b61146a84611406565b925061147860208501611406565b9150604084013590509250925092565b60006020828403121561149a57600080fd5b61046182611406565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156114cc57600080fd5b6114d583611406565b9150602083013567ffffffffffffffff808211156114f257600080fd5b818501915085601f83011261150657600080fd5b813581811115611518576115186114a3565b604051601f8201601f19908116603f01168101908382118183101715611540576115406114a3565b8160405282815288602084870101111561155957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561158e57600080fd5b61159783611406565b91506115a560208401611406565b90509250929050565b600181811c908216806115c257607f821691505b6020821081036115e257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600082198211156116a157634e487b7160e01b600052601160045260246000fd5b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116ed57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516117518184602087016113a7565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220594c9f7003f421f791b20b7e617624e0cfed7dc35fdd8b86dbf25747f2167d8064736f6c634300080d0033";

type SLCDummyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SLCDummyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SLCDummy__factory extends ContractFactory {
  constructor(...args: SLCDummyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SLCDummy";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SLCDummy> {
    return super.deploy(overrides || {}) as Promise<SLCDummy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SLCDummy {
    return super.attach(address) as SLCDummy;
  }
  connect(signer: Signer): SLCDummy__factory {
    return super.connect(signer) as SLCDummy__factory;
  }
  static readonly contractName: "SLCDummy";
  public readonly contractName: "SLCDummy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SLCDummyInterface {
    return new utils.Interface(_abi) as SLCDummyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SLCDummy {
    return new Contract(address, _abi, signerOrProvider) as SLCDummy;
  }
}
