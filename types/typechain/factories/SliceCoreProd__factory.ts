/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SliceCoreProd, SliceCoreProdInterface } from "../SliceCoreProd";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "categoryAddress_",
        type: "address",
      },
    ],
    name: "_addCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "categoryIndex",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "newCategoryAddress",
        type: "address",
      },
    ],
    name: "_changeCategoryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "slicerAddress",
        type: "address",
      },
    ],
    name: "_mintSlice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "basePath_",
        type: "string",
      },
    ],
    name: "_setBasePath",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newValue",
        type: "uint16",
      },
    ],
    name: "_setMaximumTransferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_togglePause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "categoryIndex",
        type: "uint32",
      },
    ],
    name: "categoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "slicerBatchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "slicers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516130e361004c60003960008181610ae501528181610b2501528181610e2001528181610e600152610ef301526130e36000f3fe6080604052600436106101805760003560e01c80634f1ef286116100d15780638da5cb5b1161008a578063e0ba52b911610064578063e0ba52b9146104a0578063e985e9c5146104c0578063f242432a14610509578063f2fde38b1461052957600080fd5b80638da5cb5b14610434578063a22cb46514610452578063bd85b0391461047257600080fd5b80634f1ef286146103715780634f558e791461038457806352d1902d146103b4578063588d1be7146103c95780635c975abb146104065780638129fc1c1461041f57600080fd5b806328eeb3e91161013e5780633659cfe6116101185780633659cfe6146102ef5780633ee70cb91461030f578063405b4c361461032f5780634e1273f41461034457600080fd5b806328eeb3e91461028f5780632eb2c2d6146102af578063303cd08a146102cf57600080fd5b8062fdd58e1461018557806301ffc9a7146101b8578063059f424f146101e857806308edd70c1461020a5780630e89341c1461022a578063175fa7ea14610257575b600080fd5b34801561019157600080fd5b506101a56101a036600461245b565b610549565b6040519081526020015b60405180910390f35b3480156101c457600080fd5b506101d86101d336600461249b565b6105e2565b60405190151581526020016101af565b3480156101f457600080fd5b50610208610203366004612559565b610634565b005b34801561021657600080fd5b506102086102253660046125aa565b6106b3565b34801561023657600080fd5b5061024a6102453660046125c5565b610748565b6040516101af9190612636565b34801561026357600080fd5b506102776102723660046125c5565b6107dc565b6040516001600160a01b0390911681526020016101af565b34801561029b57600080fd5b506102086102aa366004612649565b610851565b3480156102bb57600080fd5b506102086102ca366004612722565b6108a9565b3480156102db57600080fd5b506102086102ea3660046127cc565b610a64565b3480156102fb57600080fd5b5061020861030a3660046125aa565b610adb565b34801561031b57600080fd5b5061020861032a366004612826565b610bb7565b34801561033b57600080fd5b50610208610c8f565b34801561035057600080fd5b5061036461035f3660046128c6565b610cec565b6040516101af9190612965565b61020861037f366004612978565b610e16565b34801561039057600080fd5b506101d861039f3660046125c5565b60009081526101946020526040902054151590565b3480156103c057600080fd5b506101a5610ee6565b3480156103d557600080fd5b506102776103e43660046129bc565b63ffffffff16600090815261019760205260409020546001600160a01b031690565b34801561041257600080fd5b5061012e5460ff166101d8565b34801561042b57600080fd5b50610208610f9a565b34801561044057600080fd5b5060fc546001600160a01b0316610277565b34801561045e57600080fd5b5061020861046d3660046129d7565b6110a7565b34801561047e57600080fd5b506101a561048d3660046125c5565b6000908152610194602052604090205490565b3480156104ac57600080fd5b506102086104bb366004612a13565b6110b2565b3480156104cc57600080fd5b506101d86104db366004612a91565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b34801561051557600080fd5b50610208610524366004612aad565b6111e2565b34801561053557600080fd5b506102086105443660046125aa565b61130f565b60006001600160a01b0383166105ba5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061061357506001600160e01b031982166303a24d0760e21b145b8061062e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60fc546001600160a01b0316331480610657575060fb546001600160a01b031633145b6106735760405162461bcd60e51b81526004016105b190612b12565b8051610687906101939060208401906123a6565b506106b08160405160200161069c9190612b47565b604051602081830303815290604052611400565b50565b60fc546001600160a01b03163314806106d6575060fb546001600160a01b031633145b6106f25760405162461bcd60e51b81526004016105b190612b12565b61070161019680546001019055565b8061019760006107116101965490565b63ffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905550565b60606067805461075790612b6f565b80601f016020809104026020016040519081016040528092919081815260200182805461078390612b6f565b80156107d05780601f106107a5576101008083540402835291602001916107d0565b820191906000526020600020905b8154815290600101906020018083116107b357829003601f168201915b50505050509050919050565b6000818152610194602052604081205415156001146108345760405162461bcd60e51b815260206004820152601460248201527314db1a58d95c88191bd95cdb89dd08195e1a5cdd60621b60448201526064016105b1565b50600090815261019560205260409020546001600160a01b031690565b60fc546001600160a01b0316331480610874575060fb546001600160a01b031633145b6108905760405162461bcd60e51b81526004016105b190612b12565b610192805461ffff191661ffff92909216919091179055565b61019254835161ffff90911610156109035760405162461bcd60e51b815260206004820152601b60248201527f546f6f206d616e7920746f6b656e73207472616e73666572726564000000000060448201526064016105b1565b6000835167ffffffffffffffff81111561091f5761091f6124b8565b604051908082528060200260200182016040528015610948578160200160208202803683370190505b50905060005b84518163ffffffff1610156109e6576101956000868363ffffffff168151811061097a5761097a612ba9565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b0316828263ffffffff16815181106109bc576109bc612ba9565b6001600160a01b0390921660209283029190910190910152806109de81612bd5565b91505061094e565b5060fc54604051631b5cfaa360e31b81526001600160a01b039091169063dae7d51890610a1d908990899086908990600401612bf8565b600060405180830381600087803b158015610a3757600080fd5b505af1158015610a4b573d6000803e3d6000fd5b50505050610a5c8686868686611413565b505050505050565b60fc546001600160a01b03163314610a8e5760405162461bcd60e51b81526004016105b190612b12565b610aa9848484604051806020016040528060008152506114a3565b6000928352610195602052604090922080546001600160a01b0319166001600160a01b03909316929092179091555050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b235760405162461bcd60e51b81526004016105b190612c6e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b6c600080516020613067833981519152546001600160a01b031690565b6001600160a01b031614610b925760405162461bcd60e51b81526004016105b190612cba565b610b9b816114d9565b604080516000808252602082019092526106b091839190611503565b60fc546001600160a01b0316331480610bda575060fb546001600160a01b031633145b610bf65760405162461bcd60e51b81526004016105b190612b12565b63ffffffff821615801590610c145750610196548263ffffffff1611155b610c585760405162461bcd60e51b81526020600482015260156024820152744e6f6e2d6578697374656e742063617465676f727960581b60448201526064016105b1565b63ffffffff9190911660009081526101976020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b60fc546001600160a01b0316331480610cb2575060fb546001600160a01b031633145b610cce5760405162461bcd60e51b81526004016105b190612b12565b61012e5460ff1615610ce457610ce2611673565b565b610ce2611708565b60608151835114610d515760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105b1565b6000835167ffffffffffffffff811115610d6d57610d6d6124b8565b604051908082528060200260200182016040528015610d96578160200160208202803683370190505b50905060005b8451811015610e0e57610de1858281518110610dba57610dba612ba9565b6020026020010151858381518110610dd457610dd4612ba9565b6020026020010151610549565b828281518110610df357610df3612ba9565b6020908102919091010152610e0781612d06565b9050610d9c565b509392505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e5e5760405162461bcd60e51b81526004016105b190612c6e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ea7600080516020613067833981519152546001600160a01b031690565b6001600160a01b031614610ecd5760405162461bcd60e51b81526004016105b190612cba565b610ed6826114d9565b610ee282826001611503565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f865760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105b1565b506000805160206130678339815191525b90565b600054610100900460ff16610fb55760005460ff1615610fb9565b303b155b610fd55760405162461bcd60e51b81526004016105b190612d1f565b600054610100900460ff16158015610ff7576000805461ffff19166101011790555b6110356040518060400160405280602081526020017f68747470733a2f2f736c6963652e736f2f6170692f736c696365722f7b69647d815250611785565b61103e336117b5565b610192805461ffff1916601e17905560408051808201909152601c8082527f68747470733a2f2f736c6963652e736f2f6170692f736c696365722f00000000602090920191825261109291610193916123a6565b5080156106b0576000805461ff001916905550565b610ee2338383611838565b80518351146111035760405162461bcd60e51b815260206004820152601760248201527f496e7075747320646f6e277420636f72726573706f6e6400000000000000000060448201526064016105b1565b61019254835161ffff909116101561115d5760405162461bcd60e51b815260206004820152601b60248201527f546f6f206d616e7920746f6b656e73207472616e73666572726564000000000060448201526064016105b1565b60005b83518163ffffffff1610156111db576111c985858363ffffffff168151811061118b5761118b612ba9565b602002602001015185858563ffffffff16815181106111ac576111ac612ba9565b6020026020010151604051806020016040528060008152506111e2565b806111d381612bd5565b915050611160565b5050505050565b6040805160018082528183019092526000916020808301908036833750506040805160018082528183019092529293506000929150602080830190803683375050506000868152610195602052604081205484519293506001600160a01b03169184919061125257611252612ba9565b60200260200101906001600160a01b031690816001600160a01b031681525050838160008151811061128657611286612ba9565b602090810291909101015260fc54604051631b5cfaa360e31b81526001600160a01b039091169063dae7d518906112c7908a908a9087908790600401612bf8565b600060405180830381600087803b1580156112e157600080fd5b505af11580156112f5573d6000803e3d6000fd5b505050506113068787878787611918565b50505050505050565b60fc546001600160a01b0316331480611332575060fb546001600160a01b031633145b61134e5760405162461bcd60e51b81526004016105b190612b12565b6001600160a01b0381166113a45760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f206164647265737300000060448201526064016105b1565b60fc546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360fc80546001600160a01b0319166001600160a01b0392909216919091179055565b8051610ee29060679060208401906123a6565b6001600160a01b03851633148061142f575061142f85336104db565b6114965760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016105b1565b6111db858585858561199f565b6114af84848484611b85565b60008381526101946020526040812080548492906114ce908490612d6d565b909155505050505050565b60fc546001600160a01b031633146106b05760405162461bcd60e51b81526004016105b190612b12565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561153b5761153683611c97565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611595575060408051601f3d908101601f1916820190925261159291810190612d85565b60015b6115f85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105b1565b60008051602061306783398151915281146116675760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105b1565b50611536838383611d33565b61012e5460ff166116bd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105b1565b61012e805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61012e5460ff161561174f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105b1565b61012e805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116eb3390565b600054610100900460ff166117ac5760405162461bcd60e51b81526004016105b190612d9e565b6106b081611d5e565b600054610100900460ff166117d05760005460ff16156117d4565b303b155b6117f05760405162461bcd60e51b81526004016105b190612d1f565b600054610100900460ff16158015611812576000805461ffff19166101011790555b61181a611d8e565b61182382611db5565b8015610ee2576000805461ff00191690555050565b816001600160a01b0316836001600160a01b0316036118ab5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105b1565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038516331480611934575061193485336104db565b6119925760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016105b1565b6111db8585858585611e50565b8151835114611a015760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105b1565b6001600160a01b038416611a275760405162461bcd60e51b81526004016105b190612de9565b33611a36818787878787611f68565b60005b8451811015611b1f576000858281518110611a5657611a56612ba9565b602002602001015190506000858381518110611a7457611a74612ba9565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015611ac55760405162461bcd60e51b81526004016105b190612e2e565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611b04908490612d6d565b9250508190555050505080611b1890612d06565b9050611a39565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611b6f929190612e78565b60405180910390a4610a5c818787878787611fd1565b6001600160a01b038416611be55760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105b1565b33611c0581600087611bf68861212c565b611bff8861212c565b87611f68565b60008481526065602090815260408083206001600160a01b038916845290915281208054859290611c37908490612d6d565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111db81600087878787612177565b6001600160a01b0381163b611d045760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105b1565b60008051602061306783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611d3c83612232565b600082511180611d495750805b1561153657611d588383612272565b50505050565b600054610100900460ff16611d855760405162461bcd60e51b81526004016105b190612d9e565b6106b081611400565b600054610100900460ff16610ce25760405162461bcd60e51b81526004016105b190612d9e565b600054610100900460ff16611dd05760005460ff1615611dd4565b303b155b611df05760405162461bcd60e51b81526004016105b190612d1f565b600054610100900460ff16158015611e12576000805461ffff19166101011790555b60fb80546001600160a01b0384166001600160a01b03199182161790915560fc8054909116331790558015610ee2576000805461ff00191690555050565b6001600160a01b038416611e765760405162461bcd60e51b81526004016105b190612de9565b33611e86818787611bf68861212c565b60008481526065602090815260408083206001600160a01b038a16845290915290205483811015611ec95760405162461bcd60e51b81526004016105b190612e2e565b60008581526065602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611f08908490612d6d565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611306828888888888612177565b61012e5460ff1615610a5c5760405162461bcd60e51b815260206004820152602c60248201527f455243313135355061757361626c653a20746f6b656e207472616e736665722060448201526b1dda1a5b19481c185d5cd95960a21b60648201526084016105b1565b6001600160a01b0384163b15610a5c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906120159089908990889088908890600401612e9d565b6020604051808303816000875af1925050508015612050575060408051601f3d908101601f1916820190925261204d91810190612efb565b60015b6120fc5761205c612f18565b806308c379a0036120955750612070612f33565b8061207b5750612097565b8060405162461bcd60e51b81526004016105b19190612636565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105b1565b6001600160e01b0319811663bc197c8160e01b146113065760405162461bcd60e51b81526004016105b190612fbd565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061216657612166612ba9565b602090810291909101015292915050565b6001600160a01b0384163b15610a5c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906121bb9089908990889088908890600401613005565b6020604051808303816000875af19250505080156121f6575060408051601f3d908101601f191682019092526121f391810190612efb565b60015b6122025761205c612f18565b6001600160e01b0319811663f23a6e6160e01b146113065760405162461bcd60e51b81526004016105b190612fbd565b61223b81611c97565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6122da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105b1565b600080846001600160a01b0316846040516122f5919061304a565b600060405180830381855af49150503d8060008114612330576040519150601f19603f3d011682016040523d82523d6000602084013e612335565b606091505b509150915061235d828260405180606001604052806027815260200161308760279139612366565b95945050505050565b6060831561237557508161239f565b8251156123855782518084602001fd5b8160405162461bcd60e51b81526004016105b19190612636565b9392505050565b8280546123b290612b6f565b90600052602060002090601f0160209004810192826123d4576000855561241a565b82601f106123ed57805160ff191683800117855561241a565b8280016001018555821561241a579182015b8281111561241a5782518255916020019190600101906123ff565b5061242692915061242a565b5090565b5b80821115612426576000815560010161242b565b80356001600160a01b038116811461245657600080fd5b919050565b6000806040838503121561246e57600080fd5b6124778361243f565b946020939093013593505050565b6001600160e01b0319811681146106b057600080fd5b6000602082840312156124ad57600080fd5b813561239f81612485565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156124f4576124f46124b8565b6040525050565b600067ffffffffffffffff831115612515576125156124b8565b60405161252c601f8501601f1916602001826124ce565b80915083815284848401111561254157600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561256b57600080fd5b813567ffffffffffffffff81111561258257600080fd5b8201601f8101841361259357600080fd5b6125a2848235602084016124fb565b949350505050565b6000602082840312156125bc57600080fd5b61239f8261243f565b6000602082840312156125d757600080fd5b5035919050565b60005b838110156125f95781810151838201526020016125e1565b83811115611d585750506000910152565b600081518084526126228160208601602086016125de565b601f01601f19169290920160200192915050565b60208152600061239f602083018461260a565b60006020828403121561265b57600080fd5b813561ffff8116811461239f57600080fd5b600067ffffffffffffffff821115612687576126876124b8565b5060051b60200190565b600082601f8301126126a257600080fd5b813560206126af8261266d565b6040516126bc82826124ce565b83815260059390931b85018201928281019150868411156126dc57600080fd5b8286015b848110156126f757803583529183019183016126e0565b509695505050505050565b600082601f83011261271357600080fd5b61239f838335602085016124fb565b600080600080600060a0868803121561273a57600080fd5b6127438661243f565b94506127516020870161243f565b9350604086013567ffffffffffffffff8082111561276e57600080fd5b61277a89838a01612691565b9450606088013591508082111561279057600080fd5b61279c89838a01612691565b935060808801359150808211156127b257600080fd5b506127bf88828901612702565b9150509295509295909350565b600080600080608085870312156127e257600080fd5b6127eb8561243f565b935060208501359250604085013591506128076060860161243f565b905092959194509250565b803563ffffffff8116811461245657600080fd5b6000806040838503121561283957600080fd5b61284283612812565b91506128506020840161243f565b90509250929050565b600082601f83011261286a57600080fd5b813560206128778261266d565b60405161288482826124ce565b83815260059390931b85018201928281019150868411156128a457600080fd5b8286015b848110156126f7576128b98161243f565b83529183019183016128a8565b600080604083850312156128d957600080fd5b823567ffffffffffffffff808211156128f157600080fd5b6128fd86838701612859565b9350602085013591508082111561291357600080fd5b5061292085828601612691565b9150509250929050565b600081518084526020808501945080840160005b8381101561295a5781518752958201959082019060010161293e565b509495945050505050565b60208152600061239f602083018461292a565b6000806040838503121561298b57600080fd5b6129948361243f565b9150602083013567ffffffffffffffff8111156129b057600080fd5b61292085828601612702565b6000602082840312156129ce57600080fd5b61239f82612812565b600080604083850312156129ea57600080fd5b6129f38361243f565b915060208301358015158114612a0857600080fd5b809150509250929050565b60008060008060808587031215612a2957600080fd5b612a328561243f565b9350602085013567ffffffffffffffff80821115612a4f57600080fd5b612a5b88838901612859565b9450604087013593506060870135915080821115612a7857600080fd5b50612a8587828801612691565b91505092959194509250565b60008060408385031215612aa457600080fd5b6128428361243f565b600080600080600060a08688031215612ac557600080fd5b612ace8661243f565b9450612adc6020870161243f565b93506040860135925060608601359150608086013567ffffffffffffffff811115612b0657600080fd5b6127bf88828901612702565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008251612b598184602087016125de565b637b69647d60e01b920191825250600401919050565b600181811c90821680612b8357607f821691505b602082108103612ba357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818103612bee57612bee612bbf565b6001019392505050565b60006080820160018060a01b0380881684526020818816818601526080604086015282875180855260a087019150828901945060005b81811015612c4c578551851683529483019491830191600101612c2e565b50508581036060870152612c60818861292a565b9a9950505050505050505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060018201612d1857612d18612bbf565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115612d8057612d80612bbf565b500190565b600060208284031215612d9757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000612e8b604083018561292a565b828103602084015261235d818561292a565b6001600160a01b0386811682528516602082015260a060408201819052600090612ec99083018661292a565b8281036060840152612edb818661292a565b90508281036080840152612eef818561260a565b98975050505050505050565b600060208284031215612f0d57600080fd5b815161239f81612485565b600060033d1115610f975760046000803e5060005160e01c90565b600060443d1015612f415790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612f7157505050505090565b8285019150815181811115612f895750505050505090565b843d8701016020828501011115612fa35750505050505090565b612fb2602082860101876124ce565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061303f9083018461260a565b979650505050505050565b6000825161305c8184602087016125de565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e83aa46ec137ad8e7c07e96c69490265b399b9a9b7c5d4374082296b565184f464736f6c634300080d0033";

type SliceCoreProdConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SliceCoreProdConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SliceCoreProd__factory extends ContractFactory {
  constructor(...args: SliceCoreProdConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SliceCoreProd";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SliceCoreProd> {
    return super.deploy(overrides || {}) as Promise<SliceCoreProd>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SliceCoreProd {
    return super.attach(address) as SliceCoreProd;
  }
  connect(signer: Signer): SliceCoreProd__factory {
    return super.connect(signer) as SliceCoreProd__factory;
  }
  static readonly contractName: "SliceCoreProd";
  public readonly contractName: "SliceCoreProd";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SliceCoreProdInterface {
    return new utils.Interface(_abi) as SliceCoreProdInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SliceCoreProd {
    return new Contract(address, _abi, signerOrProvider) as SliceCoreProd;
  }
}
