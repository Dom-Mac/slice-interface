/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  SlicerProductsProd,
  SlicerProductsProdInterface,
} from "../SlicerProductsProd";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "categoryIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isUSD",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isMultiple",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isInfinite",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "availableUnits",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "subSlicersId",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "subProducts",
        type: "uint32[]",
      },
    ],
    name: "ProductAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "categoryIndex",
        type: "uint32",
      },
    ],
    name: "ProductCategoryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isUSD",
        type: "bool",
      },
    ],
    name: "ProductCurrencyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isInfinite",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "units",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productPrice",
        type: "uint256",
      },
    ],
    name: "ProductInfoChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "quantity",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productPrice",
        type: "uint256",
      },
    ],
    name: "ProductPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "ProductRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "isProduct",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

export class SlicerProductsProd__factory {
  static readonly abi = _abi;
  static createInterface(): SlicerProductsProdInterface {
    return new utils.Interface(_abi) as SlicerProductsProdInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SlicerProductsProd {
    return new Contract(address, _abi, signerOrProvider) as SlicerProductsProd;
  }
}
