/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EmptyUpgradeableBeacon,
  EmptyUpgradeableBeaconInterface,
} from "../EmptyUpgradeableBeacon";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c610e0461004b60003960008181610120015281816101aa015281816102a101526103260152610e046000f3fe6080604052600436106100655760003560e01c80638129fc1c116100435780638129fc1c146100b45780638da5cb5b146100c9578063f2fde38b146100f557600080fd5b80633659cfe61461006a5780634f1ef2861461008c578063715018a61461009f575b600080fd5b34801561007657600080fd5b5061008a610085366004610c35565b610115565b005b61008a61009a366004610c66565b610296565b3480156100ab57600080fd5b5061008a610403565b3480156100c057600080fd5b5061008a610469565b3480156100d557600080fd5b50609754604080516001600160a01b039092168252519081900360200190f35b34801561010157600080fd5b5061008a610110366004610c35565b610538565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101a85760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b03161461026e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b606482015260840161019f565b61027781610617565b6040805160008082526020820190925261029391839190610671565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103245760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b606482015260840161019f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661037f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146103ea5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b606482015260840161019f565b6103f382610617565b6103ff82826001610671565b5050565b6097546001600160a01b0316331461045d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019f565b610467600061081c565b565b600054610100900460ff166104845760005460ff1615610488565b303b155b6104fa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161019f565b600054610100900460ff1615801561051c576000805461ffff19166101011790555b61052461087b565b8015610293576000805461ff001916905550565b6097546001600160a01b031633146105925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019f565b6001600160a01b03811661060e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161019f565b6102938161081c565b6097546001600160a01b031633146102935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019f565b60006106a47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506106af846108f6565b6000835111806106bc5750815b156106cd576106cb84846109b8565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661081557805460ff191660011781556040516001600160a01b038316602482015261076190869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16631b2ce7f360e11b1790526109b8565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b0383811691161461080c5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f7572746865722075706772616465730000000000000000000000000000000000606482015260840161019f565b61081585610aba565b5050505050565b609780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166108e65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161019f565b6108ee610afa565b610467610b65565b803b61096a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161019f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b610a2e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161019f565b600080846001600160a01b031684604051610a499190610d58565b600060405180830381855af49150503d8060008114610a84576040519150601f19603f3d011682016040523d82523d6000602084013e610a89565b606091505b5091509150610ab18282604051806060016040528060278152602001610da860279139610bd9565b95945050505050565b610ac3816108f6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff166104675760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161019f565b600054610100900460ff16610bd05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161019f565b6104673361081c565b60608315610be8575081610c12565b825115610bf85782518084602001fd5b8160405162461bcd60e51b815260040161019f9190610d74565b9392505050565b80356001600160a01b0381168114610c3057600080fd5b919050565b600060208284031215610c4757600080fd5b610c1282610c19565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610c7957600080fd5b610c8283610c19565b9150602083013567ffffffffffffffff80821115610c9f57600080fd5b818501915085601f830112610cb357600080fd5b813581811115610cc557610cc5610c50565b604051601f8201601f19908116603f01168101908382118183101715610ced57610ced610c50565b81604052828152886020848701011115610d0657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015610d43578181015183820152602001610d2b565b83811115610d52576000848401525b50505050565b60008251610d6a818460208701610d28565b9190910192915050565b6020815260008251806020840152610d93816040850160208701610d28565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208fe6d4ebab2143664e60e813b5a94ba0cc6fd08aa905841d898f0ef208328f0f64736f6c63430008080033";

type EmptyUpgradeableBeaconConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmptyUpgradeableBeaconConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmptyUpgradeableBeacon__factory extends ContractFactory {
  constructor(...args: EmptyUpgradeableBeaconConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EmptyUpgradeableBeacon";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EmptyUpgradeableBeacon> {
    return super.deploy(overrides || {}) as Promise<EmptyUpgradeableBeacon>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EmptyUpgradeableBeacon {
    return super.attach(address) as EmptyUpgradeableBeacon;
  }
  connect(signer: Signer): EmptyUpgradeableBeacon__factory {
    return super.connect(signer) as EmptyUpgradeableBeacon__factory;
  }
  static readonly contractName: "EmptyUpgradeableBeacon";
  public readonly contractName: "EmptyUpgradeableBeacon";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmptyUpgradeableBeaconInterface {
    return new utils.Interface(_abi) as EmptyUpgradeableBeaconInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmptyUpgradeableBeacon {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EmptyUpgradeableBeacon;
  }
}
