/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SlicerTestV1, SlicerTestV1Interface } from "../SlicerTestV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
    ],
    name: "AddedChildrenSlicer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "customFeeActive",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "customFee",
        type: "uint16",
      },
    ],
    name: "CustomFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "ERC1155BatchReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC1155Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "categoryIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isUSD",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isMultiple",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isInfinite",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "availableUnits",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "subSlicersId",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "subProducts",
        type: "uint32[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionSignature",
            type: "bytes4",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SlicerProducts.Function",
        name: "externalCall",
        type: "tuple",
      },
    ],
    name: "ProductAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "categoryIndex",
        type: "uint32",
      },
    ],
    name: "ProductCategoryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isUSD",
        type: "bool",
      },
    ],
    name: "ProductCurrencyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isInfinite",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "units",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productPrice",
        type: "uint256",
      },
    ],
    name: "ProductInfoChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "quantity",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productPrice",
        type: "uint256",
      },
    ],
    name: "ProductPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "ProductRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32[]",
        name: "serviceIds",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "quantities",
        type: "uint16[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SLCPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "released",
        type: "uint256",
      },
    ],
    name: "TriggeredRelease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "isProduct",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c6108996100496000396000818160990152818160e2015281816101c5015261020501526108996000f3fe6080604052600436106100345760003560e01c80633659cfe6146100395780633739e11b1461005b5780634f1ef2861461007b575b600080fd5b34801561004557600080fd5b5061005961005436600461060c565b61008e565b005b34801561006757600080fd5b50610059610076366004610627565b610157565b610059610089366004610663565b6101ba565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100e05760405162461bcd60e51b81526004016100d790610725565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610112610267565b6001600160a01b0316146101385760405162461bcd60e51b81526004016100d790610771565b6040805160008082526020820190925261015491839190610295565b50565b63ffffffff811660009081526020819052604090206001015481906101b65760405162461bcd60e51b8152602060048201526015602482015274141c9bd91d58dd08191bd95cdb89dd08195e1a5cdd605a1b60448201526064016100d7565b5050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156102035760405162461bcd60e51b81526004016100d790610725565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610235610267565b6001600160a01b03161461025b5760405162461bcd60e51b81526004016100d790610771565b6101b682826001610295565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b600061029f610267565b90506102aa846103e0565b6000835111806102b75750815b156102c8576102c68484610485565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166103d957805460ff191660011781556040516001600160a01b038316602482015261034790869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610485565b50805460ff19168155610358610267565b6001600160a01b0316826001600160a01b0316146103d05760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016100d7565b6103d985610570565b5050505050565b803b6104445760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016100d7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6104e45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016100d7565b600080846001600160a01b0316846040516104ff91906107ed565b600060405180830381855af49150503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b5091509150610567828260405180606001604052806027815260200161083d602791396105b0565b95945050505050565b610579816103e0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606083156105bf5750816105e9565b8251156105cf5782518084602001fd5b8160405162461bcd60e51b81526004016100d79190610809565b9392505050565b80356001600160a01b038116811461060757600080fd5b919050565b60006020828403121561061e57600080fd5b6105e9826105f0565b60006020828403121561063957600080fd5b813563ffffffff811681146105e957600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561067657600080fd5b61067f836105f0565b9150602083013567ffffffffffffffff8082111561069c57600080fd5b818501915085601f8301126106b057600080fd5b8135818111156106c2576106c261064d565b604051601f8201601f19908116603f011681019083821181831017156106ea576106ea61064d565b8160405282815288602084870101111561070357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60005b838110156107d85781810151838201526020016107c0565b838111156107e7576000848401525b50505050565b600082516107ff8184602087016107bd565b9190910192915050565b60208152600082518060208401526108288160408501602087016107bd565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b49ba1d21817b9a6306f2d0f6762d379eed55de2defc433107c4afc649a4ec0764736f6c63430008080033";

type SlicerTestV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SlicerTestV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SlicerTestV1__factory extends ContractFactory {
  constructor(...args: SlicerTestV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SlicerTestV1";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SlicerTestV1> {
    return super.deploy(overrides || {}) as Promise<SlicerTestV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SlicerTestV1 {
    return super.attach(address) as SlicerTestV1;
  }
  connect(signer: Signer): SlicerTestV1__factory {
    return super.connect(signer) as SlicerTestV1__factory;
  }
  static readonly contractName: "SlicerTestV1";
  public readonly contractName: "SlicerTestV1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SlicerTestV1Interface {
    return new utils.Interface(_abi) as SlicerTestV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SlicerTestV1 {
    return new Contract(address, _abi, signerOrProvider) as SlicerTestV1;
  }
}
