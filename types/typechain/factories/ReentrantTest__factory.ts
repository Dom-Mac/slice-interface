/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ReentrantTest, ReentrantTestInterface } from "../ReentrantTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newSlicerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161067738038061067783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516105ed61008a6000396000609c01526105ed6000f3fe6080604052600436106100345760003560e01c806301ffc9a714610192578063bc197c81146101c7578063f23a6e611461020c575b6040805160018082528183019092526000916020808301908036833701905050905073f39fd6e51aad88f6f4ce6ab8827279cfffb922668160008151811061007e5761007e610285565b6001600160a01b0392831660209182029290920101526040516000917f000000000000000000000000000000000000000000000000000000000000000016906100cf9084908490819060240161029b565b60408051601f198184030181529181526020820180516001600160e01b0316627350df60e91b1790525161010391906102ff565b6000604051808303816000865af19150503d8060008114610140576040519150601f19603f3d011682016040523d82523d6000602084013e610145565b606091505b50509050806101905760405162461bcd60e51b815260206004820152601360248201527210d85b1b081b9bdd081cdd58d8d95cdcd99d5b606a1b604482015260640160405180910390fd5b005b34801561019e57600080fd5b506101b26101ad36600461033a565b610238565b60405190151581526020015b60405180910390f35b3480156101d357600080fd5b506101f36101e23660046104a8565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101be565b34801561021857600080fd5b506101f3610227366004610552565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061026957506301ffc9a760e01b6001600160e01b03198316145b92915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b606080825284519082018190526000906020906080840190828801845b828110156102dd5781516001600160a01b0316845292840192908401906001016102b8565b5050506001600160a01b03959095169083015250901515604090910152919050565b6000825160005b818110156103205760208186018101518583015201610306565b8181111561032f576000828501525b509190910192915050565b60006020828403121561034c57600080fd5b81356001600160e01b03198116811461036457600080fd5b9392505050565b80356001600160a01b038116811461038257600080fd5b919050565b604051601f8201601f1916810167ffffffffffffffff811182821017156103b0576103b061026f565b604052919050565b600082601f8301126103c957600080fd5b8135602067ffffffffffffffff8211156103e5576103e561026f565b8160051b6103f4828201610387565b928352848101820192828101908785111561040e57600080fd5b83870192505b8483101561042d57823582529183019190830190610414565b979650505050505050565b600082601f83011261044957600080fd5b813567ffffffffffffffff8111156104635761046361026f565b610476601f8201601f1916602001610387565b81815284602083860101111561048b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156104c057600080fd5b6104c98661036b565b94506104d76020870161036b565b9350604086013567ffffffffffffffff808211156104f457600080fd5b61050089838a016103b8565b9450606088013591508082111561051657600080fd5b61052289838a016103b8565b9350608088013591508082111561053857600080fd5b5061054588828901610438565b9150509295509295909350565b600080600080600060a0868803121561056a57600080fd5b6105738661036b565b94506105816020870161036b565b93506040860135925060608601359150608086013567ffffffffffffffff8111156105ab57600080fd5b6105458882890161043856fea26469706673582212209083077d98f34bab60a19d3211944867a02030ab188e8ddcb0c2032c39e9ff8e64736f6c634300080d0033";

type ReentrantTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrantTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrantTest__factory extends ContractFactory {
  constructor(...args: ReentrantTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ReentrantTest";
  }

  deploy(
    newSlicerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentrantTest> {
    return super.deploy(
      newSlicerAddress,
      overrides || {}
    ) as Promise<ReentrantTest>;
  }
  getDeployTransaction(
    newSlicerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(newSlicerAddress, overrides || {});
  }
  attach(address: string): ReentrantTest {
    return super.attach(address) as ReentrantTest;
  }
  connect(signer: Signer): ReentrantTest__factory {
    return super.connect(signer) as ReentrantTest__factory;
  }
  static readonly contractName: "ReentrantTest";
  public readonly contractName: "ReentrantTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrantTestInterface {
    return new utils.Interface(_abi) as ReentrantTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrantTest {
    return new Contract(address, _abi, signerOrProvider) as ReentrantTest;
  }
}
