/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SLC, SLCInterface } from "../SLC";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516117b161004c6000396000818161044b0152818161049401528181610572015281816105b2015261064501526117b16000f3fe6080604052600436106101095760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102b6578063a457c2d7146102cb578063a9059cbb146102eb578063dd62ed3e1461030b578063f2fde38b1461035157600080fd5b806370a082311461022e578063715018a6146102645780638129fc1c146102795780638da5cb5b1461028e57600080fd5b8063313ce567116100dc578063313ce567146101a85780633659cfe6146101c457806339509351146101e65780634f1ef2861461020657806352d1902d1461021957600080fd5b806306fdde031461010e578063095ea7b31461013957806318160ddd1461016957806323b872dd14610188575b600080fd5b34801561011a57600080fd5b50610123610371565b60405161013091906113ac565b60405180910390f35b34801561014557600080fd5b506101596101543660046113fb565b610403565b6040519015158152602001610130565b34801561017557600080fd5b506035545b604051908152602001610130565b34801561019457600080fd5b506101596101a3366004611425565b61041b565b3480156101b457600080fd5b5060405160128152602001610130565b3480156101d057600080fd5b506101e46101df366004611461565b610441565b005b3480156101f257600080fd5b506101596102013660046113fb565b610529565b6101e4610214366004611492565b610568565b34801561022557600080fd5b5061017a610638565b34801561023a57600080fd5b5061017a610249366004611461565b6001600160a01b031660009081526033602052604090205490565b34801561027057600080fd5b506101e46106eb565b34801561028557600080fd5b506101e4610721565b34801561029a57600080fd5b5060c9546040516001600160a01b039091168152602001610130565b3480156102c257600080fd5b5061012361083a565b3480156102d757600080fd5b506101596102e63660046113fb565b610849565b3480156102f757600080fd5b506101596103063660046113fb565b6108e6565b34801561031757600080fd5b5061017a610326366004611554565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561035d57600080fd5b506101e461036c366004611461565b6108f4565b60606036805461038090611587565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90611587565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b60003361041181858561098c565b5060019392505050565b600033610429858285610ab0565b610434858585610b42565b60019150505b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104925760405162461bcd60e51b8152600401610489906115c1565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104db600080516020611735833981519152546001600160a01b031690565b6001600160a01b0316146105015760405162461bcd60e51b81526004016104899061160d565b61050a81610d10565b6040805160008082526020820190925261052691839190610d3a565b50565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906104119082908690610563908790611659565b61098c565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105b05760405162461bcd60e51b8152600401610489906115c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105f9600080516020611735833981519152546001600160a01b031690565b6001600160a01b03161461061f5760405162461bcd60e51b81526004016104899061160d565b61062882610d10565b61063482826001610d3a565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106d85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610489565b5060008051602061173583398151915290565b60c9546001600160a01b031633146107155760405162461bcd60e51b81526004016104899061167f565b61071f6000610eaa565b565b600054610100900460ff1661073c5760005460ff1615610740565b303b155b6107a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610489565b600054610100900460ff161580156107c5576000805461ffff19166101011790555b61080760405180604001604052806005815260200164536c69636560d81b81525060405180604001604052806003815260200162534c4360e81b815250610efc565b61080f610f2d565b610826336c0c9f2c9cd04674edea40000000610f5c565b8015610526576000805461ff001916905550565b60606037805461038090611587565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156108ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610489565b6108db828686840361098c565b506001949350505050565b600033610411818585610b42565b60c9546001600160a01b0316331461091e5760405162461bcd60e51b81526004016104899061167f565b6001600160a01b0381166109835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610489565b61052681610eaa565b6001600160a01b0383166109ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610489565b6001600160a01b038216610a4f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610489565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610b3c5781811015610b2f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610489565b610b3c848484840361098c565b50505050565b6001600160a01b038316610ba65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610489565b6001600160a01b038216610c085760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610489565b6001600160a01b03831660009081526033602052604090205481811015610c805760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610489565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610cb7908490611659565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d0391815260200190565b60405180910390a3610b3c565b60c9546001600160a01b031633146105265760405162461bcd60e51b81526004016104899061167f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610d7257610d6d8361103b565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610dcc575060408051601f3d908101601f19168201909252610dc9918101906116b4565b60015b610e2f5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610489565b6000805160206117358339815191528114610e9e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610489565b50610d6d8383836110d7565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f235760405162461bcd60e51b8152600401610489906116cd565b61063482826110fc565b600054610100900460ff16610f545760405162461bcd60e51b8152600401610489906116cd565b61071f61114a565b6001600160a01b038216610fb25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610489565b8060356000828254610fc49190611659565b90915550506001600160a01b03821660009081526033602052604081208054839290610ff1908490611659565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0381163b6110a85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610489565b60008051602061173583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6110e08361117a565b6000825111806110ed5750805b15610d6d57610b3c83836111ba565b600054610100900460ff166111235760405162461bcd60e51b8152600401610489906116cd565b81516111369060369060208501906112e7565b508051610d6d9060379060208401906112e7565b600054610100900460ff166111715760405162461bcd60e51b8152600401610489906116cd565b61071f33610eaa565b6111838161103b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6112225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610489565b600080846001600160a01b03168460405161123d9190611718565b600060405180830381855af49150503d8060008114611278576040519150601f19603f3d011682016040523d82523d6000602084013e61127d565b606091505b50915091506112a58282604051806060016040528060278152602001611755602791396112ae565b95945050505050565b606083156112bd57508161043a565b8251156112cd5782518084602001fd5b8160405162461bcd60e51b815260040161048991906113ac565b8280546112f390611587565b90600052602060002090601f016020900481019282611315576000855561135b565b82601f1061132e57805160ff191683800117855561135b565b8280016001018555821561135b579182015b8281111561135b578251825591602001919060010190611340565b5061136792915061136b565b5090565b5b80821115611367576000815560010161136c565b60005b8381101561139b578181015183820152602001611383565b83811115610b3c5750506000910152565b60208152600082518060208401526113cb816040850160208701611380565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146113f657600080fd5b919050565b6000806040838503121561140e57600080fd5b611417836113df565b946020939093013593505050565b60008060006060848603121561143a57600080fd5b611443846113df565b9250611451602085016113df565b9150604084013590509250925092565b60006020828403121561147357600080fd5b61043a826113df565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156114a557600080fd5b6114ae836113df565b9150602083013567ffffffffffffffff808211156114cb57600080fd5b818501915085601f8301126114df57600080fd5b8135818111156114f1576114f161147c565b604051601f8201601f19908116603f011681019083821181831017156115195761151961147c565b8160405282815288602084870101111561153257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561156757600080fd5b611570836113df565b915061157e602084016113df565b90509250929050565b600181811c9082168061159b57607f821691505b6020821081036115bb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000821982111561167a57634e487b7160e01b600052601160045260246000fd5b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116c657600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161172a818460208701611380565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122045653e791262ac2f68d507593140575c13e7f2a582a4bbb4ac00bf2a3daeeb5564736f6c634300080d0033";

type SLCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SLCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SLC__factory extends ContractFactory {
  constructor(...args: SLCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SLC";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SLC> {
    return super.deploy(overrides || {}) as Promise<SLC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SLC {
    return super.attach(address) as SLC;
  }
  connect(signer: Signer): SLC__factory {
    return super.connect(signer) as SLC__factory;
  }
  static readonly contractName: "SLC";
  public readonly contractName: "SLC";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SLCInterface {
    return new utils.Interface(_abi) as SLCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SLC {
    return new Contract(address, _abi, signerOrProvider) as SLC;
  }
}
