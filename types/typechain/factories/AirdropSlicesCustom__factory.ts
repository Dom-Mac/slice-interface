/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AirdropSlicesCustom,
  AirdropSlicesCustomInterface,
} from "../AirdropSlicesCustom";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sliceCoreAddress_",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "collector_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "whitelistPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistStartDate_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPayment",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInWhitelist",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSlicer",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "slicesSupplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slicesAmount",
        type: "uint256",
      },
    ],
    name: "AirdropClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "whitelistPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "whitelistStartDate",
        type: "uint256",
      },
    ],
    name: "ParamsSet",
    type: "event",
  },
  {
    inputs: [],
    name: "_closeAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "collector_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "whitelistPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistStartDate_",
        type: "uint256",
      },
    ],
    name: "_setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airdropInfo",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "slicerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "whitelistPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistStartDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelistSaleStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseToCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516110a23803806110a283398101604081905261002f91610082565b6001600160a01b0394851660805260018054959094166001600160a01b0319909516949094179092556003556004556005553360a0526100d5565b6001600160a01b038116811461007f57600080fd5b50565b600080600080600060a0868803121561009a57600080fd5b85516100a58161006a565b60208701519095506100b68161006a565b6040870151606088015160809098015196999198509695945092505050565b60805160a051610f7e610124600039600081816105960152818161069001526109a50152600081816104c4015281816105f9015281816106de0152818161082401526108bc0152610f7e6000f3fe6080604052600436106100a05760003560e01c806396df383e1161006457806396df383e1461022e578063bc197c8114610243578063bd50638d1461027c578063db4bec4414610291578063f23a6e61146102ca578063f3180630146102ea57600080fd5b806301ffc9a7146101475780631a6a4ce41461017c57806329b111b4146101935780632f52ebb7146101eb578063851a7708146101fe57600080fd5b366101425760005460ff166100c8576040516321c4e35760e21b815260040160405180910390fd5b600080546040516101009091046001600160a01b03169034908381818185875af1925050503d8060008114610119576040519150601f19603f3d011682016040523d82523d6000602084013e61011e565b606091505b50509050806101405760405163af6eefa360e01b815260040160405180910390fd5b005b600080fd5b34801561015357600080fd5b50610167610162366004610b0b565b61030a565b60405190151581526020015b60405180910390f35b34801561018857600080fd5b506005544211610167565b34801561019f57600080fd5b50600354600054600154600454600554604080519586526101009094046001600160a01b039081166020870152909216928401929092526060830191909152608082015260a001610173565b6101406101f9366004610b3c565b610341565b34801561020a57600080fd5b50610167610219366004610bd0565b60076020526000908152604090205460ff1681565b34801561023a57600080fd5b50610140610575565b34801561024f57600080fd5b5061026361025e366004610d24565b610799565b6040516001600160e01b03199091168152602001610173565b34801561028857600080fd5b506101406107a0565b34801561029d57600080fd5b506101676102ac366004610bd0565b6001600160a01b031660009081526007602052604090205460ff1690565b3480156102d657600080fd5b506102636102e5366004610dd2565b610817565b3480156102f657600080fd5b50610140610305366004610e3b565b61099a565b60006001600160e01b03198216630271189760e51b148061033b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60005460ff16610364576040516321c4e35760e21b815260040160405180910390fd5b3360009081526007602052604090205460ff161561039557604051630c8d9eab60e31b815260040160405180910390fd5b60055442116103b7576040516316851a3760e11b815260040160405180910390fd5b6040516bffffffffffffffffffffffff193360601b16602082015260348101849052600090605401604051602081830303815290604052805190602001209050600061043a848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506003549150859050610a81565b90508061045a57604051632d85515d60e11b815260040160405180910390fd5b336000908152600760205260409020805460ff19166001179055600454156104aa578460045461048a9190610e8c565b3410156104aa5760405163cd1c886760e01b815260040160405180910390fd5b6006546040516330d64ac360e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c3592b0c916104fe9130913391908b90600401610eab565b600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b505060065460408051918252602082018990523393507f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a92500160405180910390a25050505050565b6002546001600160a01b031633148015906105b95750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156105d75760405163ea8e4eb560e01b815260040160405180910390fd5b600654604051627eeac760e11b815230600482015260248101919091526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062fdd58e90604401602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610ee3565b6000805460025492935090916001600160a01b0361010090920482169116036106b4577f00000000000000000000000000000000000000000000000000000000000000006106c1565b6002546001600160a01b03165b6006546040516330d64ac360e21b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c3592b0c9161071791309186918890600401610eab565b600060405180830381600087803b15801561073157600080fd5b505af1158015610745573d6000803e3d6000fd5b50506000805460ff191690555050604080516001600160a01b0383168152602081018490527f985958e1847839c9e2b7ae50bd0c12b997369fb7c002dc50301761caa76a52da910160405180910390a15050565b6000806000fd5b6001546040516000916001600160a01b03169047908381818185875af1925050503d80600081146107ed576040519150601f19603f3d011682016040523d82523d6000602084013e6107f2565b606091505b50509050806108145760405163af6eefa360e01b815260040160405180910390fd5b50565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461086257604051634f1f009f60e01b815260040160405180910390fd5b60005460ff1615610886576040516302ed543d60e51b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0387811691909117909155604051630bafd3f560e11b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000009091169063175fa7ea90602401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190610efc565b6000805460016001600160a81b03199091166101006001600160a01b039485160260ff19161781179091556006869055541661098857600054600180546101009092046001600160a01b03166001600160a01b03199092169190911790555b5063f23a6e6160e01b95945050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e35760405163ea8e4eb560e01b815260040160405180910390fd5b60005460ff1615610a07576040516302ed543d60e51b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03861690811790915560038490556004839055600582905560408051918252602082018590528101839052606081018290527fa683d70b358dd3a2d0ecdf3a2738c64f033a00ebdc47da81c952031823ff73aa9060800160405180910390a150505050565b600082610a8e8584610a97565b14949350505050565b600081815b8451811015610b03576000858281518110610ab957610ab9610f19565b60200260200101519050808311610adf5760008381526020829052604090209250610af0565b600081815260208490526040902092505b5080610afb81610f2f565b915050610a9c565b509392505050565b600060208284031215610b1d57600080fd5b81356001600160e01b031981168114610b3557600080fd5b9392505050565b600080600060408486031215610b5157600080fd5b83359250602084013567ffffffffffffffff80821115610b7057600080fd5b818601915086601f830112610b8457600080fd5b813581811115610b9357600080fd5b8760208260051b8501011115610ba857600080fd5b6020830194508093505050509250925092565b6001600160a01b038116811461081457600080fd5b600060208284031215610be257600080fd5b8135610b3581610bbb565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c2c57610c2c610bed565b604052919050565b600082601f830112610c4557600080fd5b8135602067ffffffffffffffff821115610c6157610c61610bed565b8160051b610c70828201610c03565b9283528481018201928281019087851115610c8a57600080fd5b83870192505b84831015610ca957823582529183019190830190610c90565b979650505050505050565b600082601f830112610cc557600080fd5b813567ffffffffffffffff811115610cdf57610cdf610bed565b610cf2601f8201601f1916602001610c03565b818152846020838601011115610d0757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d3c57600080fd5b8535610d4781610bbb565b94506020860135610d5781610bbb565b9350604086013567ffffffffffffffff80821115610d7457600080fd5b610d8089838a01610c34565b94506060880135915080821115610d9657600080fd5b610da289838a01610c34565b93506080880135915080821115610db857600080fd5b50610dc588828901610cb4565b9150509295509295909350565b600080600080600060a08688031215610dea57600080fd5b8535610df581610bbb565b94506020860135610e0581610bbb565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e2f57600080fd5b610dc588828901610cb4565b60008060008060808587031215610e5157600080fd5b8435610e5c81610bbb565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610ea657610ea6610e76565b500290565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b600060208284031215610ef557600080fd5b5051919050565b600060208284031215610f0e57600080fd5b8151610b3581610bbb565b634e487b7160e01b600052603260045260246000fd5b600060018201610f4157610f41610e76565b506001019056fea26469706673582212202897f4c6a5dc6c8daa7ba8d616774d1bec4288ef994d1478f513fe77d78d18ef64736f6c634300080d0033";

type AirdropSlicesCustomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropSlicesCustomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropSlicesCustom__factory extends ContractFactory {
  constructor(...args: AirdropSlicesCustomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AirdropSlicesCustom";
  }

  deploy(
    sliceCoreAddress_: string,
    collector_: string,
    merkleRoot_: BytesLike,
    whitelistPrice_: BigNumberish,
    whitelistStartDate_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirdropSlicesCustom> {
    return super.deploy(
      sliceCoreAddress_,
      collector_,
      merkleRoot_,
      whitelistPrice_,
      whitelistStartDate_,
      overrides || {}
    ) as Promise<AirdropSlicesCustom>;
  }
  getDeployTransaction(
    sliceCoreAddress_: string,
    collector_: string,
    merkleRoot_: BytesLike,
    whitelistPrice_: BigNumberish,
    whitelistStartDate_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      sliceCoreAddress_,
      collector_,
      merkleRoot_,
      whitelistPrice_,
      whitelistStartDate_,
      overrides || {}
    );
  }
  attach(address: string): AirdropSlicesCustom {
    return super.attach(address) as AirdropSlicesCustom;
  }
  connect(signer: Signer): AirdropSlicesCustom__factory {
    return super.connect(signer) as AirdropSlicesCustom__factory;
  }
  static readonly contractName: "AirdropSlicesCustom";
  public readonly contractName: "AirdropSlicesCustom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropSlicesCustomInterface {
    return new utils.Interface(_abi) as AirdropSlicesCustomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropSlicesCustom {
    return new Contract(address, _abi, signerOrProvider) as AirdropSlicesCustom;
  }
}
