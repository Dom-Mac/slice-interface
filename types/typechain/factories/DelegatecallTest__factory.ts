/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DelegatecallTest,
  DelegatecallTestInterface,
} from "../DelegatecallTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ReturnedData",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "slicerAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "delegateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061022b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634630359c14610030575b600080fd5b61004361003e366004610128565b610045565b005b60405163ffffffff8216602482015260009081906001600160a01b0385169060440160408051601f198184030181529181526020820180516001600160e01b0316633446032360e01b1790525161009c91906101a6565b600060405180830381855af49150503d80600081146100d7576040519150601f19603f3d011682016040523d82523d6000602084013e6100dc565b606091505b5091509150816100eb57600080fd5b7ff1cbeb6a60245e1f1f161075408672c6b527b7a85f8dbf3dcf68333f9c955e108160405161011a91906101c2565b60405180910390a150505050565b6000806040838503121561013b57600080fd5b82356001600160a01b038116811461015257600080fd5b9150602083013563ffffffff8116811461016b57600080fd5b809150509250929050565b60005b83811015610191578181015183820152602001610179565b838111156101a0576000848401525b50505050565b600082516101b8818460208701610176565b9190910192915050565b60208152600082518060208401526101e1816040850160208701610176565b601f01601f1916919091016040019291505056fea2646970667358221220644bf28449befc82d3181eb3834769e55760b4dbfc0b1b8190a29f6eb808aa6c64736f6c63430008080033";

type DelegatecallTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegatecallTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DelegatecallTest__factory extends ContractFactory {
  constructor(...args: DelegatecallTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DelegatecallTest";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DelegatecallTest> {
    return super.deploy(overrides || {}) as Promise<DelegatecallTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DelegatecallTest {
    return super.attach(address) as DelegatecallTest;
  }
  connect(signer: Signer): DelegatecallTest__factory {
    return super.connect(signer) as DelegatecallTest__factory;
  }
  static readonly contractName: "DelegatecallTest";
  public readonly contractName: "DelegatecallTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegatecallTestInterface {
    return new utils.Interface(_abi) as DelegatecallTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelegatecallTest {
    return new Contract(address, _abi, signerOrProvider) as DelegatecallTest;
  }
}
