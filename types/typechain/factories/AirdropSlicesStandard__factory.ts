/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AirdropSlicesStandard,
  AirdropSlicesStandardInterface,
} from "../AirdropSlicesStandard";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sliceCoreAddress_",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "collector_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimSlicesAmount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistStartDate_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPayment",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInWhitelist",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSlicer",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "slicesSupplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slicesAmount",
        type: "uint256",
      },
    ],
    name: "AirdropClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "whitelistPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "whitelistStartDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimSlicesAmount",
        type: "uint256",
      },
    ],
    name: "ParamsSet",
    type: "event",
  },
  {
    inputs: [],
    name: "_closeAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "collector_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "whitelistPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistStartDate_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimSlicesAmount_",
        type: "uint256",
      },
    ],
    name: "_setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airdropInfo",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "slicerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "whitelistPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistStartDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimSlicesAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelistSaleStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseToCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516110c83803806110c883398101604081905261002f91610089565b6001600160a01b03958616608052600180546001600160a01b03191695909616949094179094556003919091556004929092556005553360a0526008556100e7565b6001600160a01b038116811461008657600080fd5b50565b60008060008060008060c087890312156100a257600080fd5b86516100ad81610071565b60208801519096506100be81610071565b6040880151606089015160808a015160a0909a0151989b929a5090989097909650945092505050565b60805160a051610f926101366000396000818161036a0152818161046401526105780152600081816103cd015281816104b2015281816107e20152818161092001526109b80152610f926000f3fe6080604052600436106100a05760003560e01c8063ab180e9a11610064578063ab180e9a14610238578063b391c50814610258578063bc197c811461026b578063bd50638d146102a4578063db4bec44146102b9578063f23a6e61146102f257600080fd5b806301ffc9a7146101475780631a6a4ce41461017c57806329b111b414610193578063851a7708146101f357806396df383e1461022357600080fd5b366101425760005460ff166100c8576040516321c4e35760e21b815260040160405180910390fd5b600080546040516101009091046001600160a01b03169034908381818185875af1925050503d8060008114610119576040519150601f19603f3d011682016040523d82523d6000602084013e61011e565b606091505b50509050806101405760405163af6eefa360e01b815260040160405180910390fd5b005b600080fd5b34801561015357600080fd5b50610167610162366004610b20565b610312565b60405190151581526020015b60405180910390f35b34801561018857600080fd5b506005544211610167565b34801561019f57600080fd5b50600354600054600154600454600554600854604080519687526101009095046001600160a01b039081166020880152909316938501939093526060840152608083019190915260a082015260c001610173565b3480156101ff57600080fd5b5061016761020e366004610b66565b60076020526000908152604090205460ff1681565b34801561022f57600080fd5b50610140610349565b34801561024457600080fd5b50610140610253366004610b83565b61056d565b610140610266366004610bc7565b610661565b34801561027757600080fd5b5061028b610286366004610d73565b610895565b6040516001600160e01b03199091168152602001610173565b3480156102b057600080fd5b5061014061089c565b3480156102c557600080fd5b506101676102d4366004610b66565b6001600160a01b031660009081526007602052604090205460ff1690565b3480156102fe57600080fd5b5061028b61030d366004610e21565b610913565b60006001600160e01b03198216630271189760e51b148061034357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6002546001600160a01b0316331480159061038d5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156103ab5760405163ea8e4eb560e01b815260040160405180910390fd5b600654604051627eeac760e11b815230600482015260248101919091526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062fdd58e90604401602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190610e8a565b6000805460025492935090916001600160a01b036101009092048216911603610488577f0000000000000000000000000000000000000000000000000000000000000000610495565b6002546001600160a01b03165b6006546040516330d64ac360e21b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c3592b0c916104eb91309186918890600401610ea3565b600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b50506000805460ff191690555050604080516001600160a01b0383168152602081018490527f985958e1847839c9e2b7ae50bd0c12b997369fb7c002dc50301761caa76a52da910160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105b65760405163ea8e4eb560e01b815260040160405180910390fd5b60005460ff16156105da576040516302ed543d60e51b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03871690811790915560038590556004849055600583905560088290556040805191825260208201869052810184905260608101839052608081018290527f160bcb866ad90dd79196680af1cefca3375b2ebc7ac69cf888b6a9ab9e2d5cc99060a00160405180910390a15050505050565b60005460ff16610684576040516321c4e35760e21b815260040160405180910390fd5b3360009081526007602052604090205460ff16156106b557604051630c8d9eab60e31b815260040160405180910390fd5b60055442116106d7576040516316851a3760e11b815260040160405180910390fd5b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506000610753848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506003549150859050610a96565b90508061077357604051632d85515d60e11b815260040160405180910390fd5b336000908152600760205260409020805460ff19166001179055600454156107c5576008546004546107a59190610ef1565b3410156107c55760405163cd1c886760e01b815260040160405180910390fd5b6006546008546040516330d64ac360e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263c3592b0c9261081b92309233929091600401610ea3565b600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b50506006546008546040805192835260208301919091523393507f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a92500160405180910390a250505050565b6000806000fd5b6001546040516000916001600160a01b03169047908381818185875af1925050503d80600081146108e9576040519150601f19603f3d011682016040523d82523d6000602084013e6108ee565b606091505b50509050806109105760405163af6eefa360e01b815260040160405180910390fd5b50565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461095e57604051634f1f009f60e01b815260040160405180910390fd5b60005460ff1615610982576040516302ed543d60e51b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0387811691909117909155604051630bafd3f560e11b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000009091169063175fa7ea90602401602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a259190610f10565b6000805460016001600160a81b03199091166101006001600160a01b039485160260ff191617811790915560068690555416610a8457600054600180546101009092046001600160a01b03166001600160a01b03199092169190911790555b5063f23a6e6160e01b95945050505050565b600082610aa38584610aac565b14949350505050565b600081815b8451811015610b18576000858281518110610ace57610ace610f2d565b60200260200101519050808311610af45760008381526020829052604090209250610b05565b600081815260208490526040902092505b5080610b1081610f43565b915050610ab1565b509392505050565b600060208284031215610b3257600080fd5b81356001600160e01b031981168114610b4a57600080fd5b9392505050565b6001600160a01b038116811461091057600080fd5b600060208284031215610b7857600080fd5b8135610b4a81610b51565b600080600080600060a08688031215610b9b57600080fd5b8535610ba681610b51565b97602087013597506040870135966060810135965060800135945092505050565b60008060208385031215610bda57600080fd5b823567ffffffffffffffff80821115610bf257600080fd5b818501915085601f830112610c0657600080fd5b813581811115610c1557600080fd5b8660208260051b8501011115610c2a57600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c7b57610c7b610c3c565b604052919050565b600082601f830112610c9457600080fd5b8135602067ffffffffffffffff821115610cb057610cb0610c3c565b8160051b610cbf828201610c52565b9283528481018201928281019087851115610cd957600080fd5b83870192505b84831015610cf857823582529183019190830190610cdf565b979650505050505050565b600082601f830112610d1457600080fd5b813567ffffffffffffffff811115610d2e57610d2e610c3c565b610d41601f8201601f1916602001610c52565b818152846020838601011115610d5657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d8b57600080fd5b8535610d9681610b51565b94506020860135610da681610b51565b9350604086013567ffffffffffffffff80821115610dc357600080fd5b610dcf89838a01610c83565b94506060880135915080821115610de557600080fd5b610df189838a01610c83565b93506080880135915080821115610e0757600080fd5b50610e1488828901610d03565b9150509295509295909350565b600080600080600060a08688031215610e3957600080fd5b8535610e4481610b51565b94506020860135610e5481610b51565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e7e57600080fd5b610e1488828901610d03565b600060208284031215610e9c57600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610f0b57610f0b610edb565b500290565b600060208284031215610f2257600080fd5b8151610b4a81610b51565b634e487b7160e01b600052603260045260246000fd5b600060018201610f5557610f55610edb565b506001019056fea2646970667358221220ccf09d704fadca65919be03c00070bc32c42d0852ce71f8e4afd876974aa846764736f6c634300080d0033";

type AirdropSlicesStandardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropSlicesStandardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropSlicesStandard__factory extends ContractFactory {
  constructor(...args: AirdropSlicesStandardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AirdropSlicesStandard";
  }

  deploy(
    sliceCoreAddress_: string,
    collector_: string,
    merkleRoot_: BytesLike,
    claimSlicesAmount_: BigNumberish,
    whitelistPrice_: BigNumberish,
    whitelistStartDate_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirdropSlicesStandard> {
    return super.deploy(
      sliceCoreAddress_,
      collector_,
      merkleRoot_,
      claimSlicesAmount_,
      whitelistPrice_,
      whitelistStartDate_,
      overrides || {}
    ) as Promise<AirdropSlicesStandard>;
  }
  getDeployTransaction(
    sliceCoreAddress_: string,
    collector_: string,
    merkleRoot_: BytesLike,
    claimSlicesAmount_: BigNumberish,
    whitelistPrice_: BigNumberish,
    whitelistStartDate_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      sliceCoreAddress_,
      collector_,
      merkleRoot_,
      claimSlicesAmount_,
      whitelistPrice_,
      whitelistStartDate_,
      overrides || {}
    );
  }
  attach(address: string): AirdropSlicesStandard {
    return super.attach(address) as AirdropSlicesStandard;
  }
  connect(signer: Signer): AirdropSlicesStandard__factory {
    return super.connect(signer) as AirdropSlicesStandard__factory;
  }
  static readonly contractName: "AirdropSlicesStandard";
  public readonly contractName: "AirdropSlicesStandard";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropSlicesStandardInterface {
    return new utils.Interface(_abi) as AirdropSlicesStandardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropSlicesStandard {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AirdropSlicesStandard;
  }
}
