/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Test, ERC1155TestInterface } from "../ERC1155Test";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000033565b506200012e565b8051620000489060029060208401906200004c565b5050565b8280546200005a90620000f2565b90600052602060002090601f0160209004810192826200007e5760008555620000c9565b82601f106200009957805160ff1916838001178555620000c9565b82800160010185558215620000c9579182015b82811115620000c9578251825591602001919060010190620000ac565b50620000d7929150620000db565b5090565b5b80821115620000d75760008155600101620000dc565b600181811c908216806200010757607f821691505b6020821081036200012857634e487b7160e01b600052602260045260246000fd5b50919050565b611527806200013e6000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80634e1273f4116100665780634e1273f4146101155780636a62784214610135578063a22cb46514610148578063e985e9c51461015b578063f242432a1461019757600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e05780632eb2c2d614610100575b600080fd5b6100aa6100a5366004610d14565b6101aa565b6040519081526020015b60405180910390f35b6100d06100cb366004610d54565b610241565b60405190151581526020016100b4565b6100f36100ee366004610d78565b610293565b6040516100b49190610dde565b61011361010e366004610f3d565b610327565b005b610128610123366004610fe7565b6103be565b6040516100b491906110ed565b610113610143366004611100565b6104e8565b61011361015636600461111b565b61051d565b6100d0610169366004611157565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101136101a536600461118a565b61052c565b60006001600160a01b03831661021b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061027257506001600160e01b031982166303a24d0760e21b145b8061028d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102a2906111ef565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce906111ef565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061034357506103438533610169565b6103aa5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610212565b6103b785858585856105b3565b5050505050565b606081518351146104235760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610212565b6000835167ffffffffffffffff81111561043f5761043f610df1565b604051908082528060200260200182016040528015610468578160200160208202803683370190505b50905060005b84518110156104e0576104b385828151811061048c5761048c611229565b60200260200101518583815181106104a6576104a6611229565b60200260200101516101aa565b8282815181106104c5576104c5611229565b60209081029190910101526104d981611255565b905061046e565b509392505050565b61050c816104f560035490565b606460405180602001604052806000815250610790565b61051a600380546001019055565b50565b61052833838361089a565b5050565b6001600160a01b03851633148061054857506105488533610169565b6105a65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610212565b6103b7858585858561097a565b81518351146106155760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610212565b6001600160a01b03841661063b5760405162461bcd60e51b81526004016102129061126e565b3360005b845181101561072257600085828151811061065c5761065c611229565b60200260200101519050600085838151811061067a5761067a611229565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106ca5760405162461bcd60e51b8152600401610212906112b3565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107079084906112fd565b925050819055505050508061071b90611255565b905061063f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610772929190611315565b60405180910390a4610788818787878787610a97565b505050505050565b6001600160a01b0384166107f05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610212565b3361080a8160008761080188610bf2565b6103b788610bf2565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061083a9084906112fd565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46103b781600087878787610c3d565b816001600160a01b0316836001600160a01b03160361090d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610212565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109a05760405162461bcd60e51b81526004016102129061126e565b336109b081878761080188610bf2565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156109f15760405162461bcd60e51b8152600401610212906112b3565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610a2e9084906112fd565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a8e828888888888610c3d565b50505050505050565b6001600160a01b0384163b156107885760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610adb9089908990889088908890600401611343565b6020604051808303816000875af1925050508015610b16575060408051601f3d908101601f19168201909252610b13918101906113a1565b60015b610bc257610b226113be565b806308c379a003610b5b5750610b366113da565b80610b415750610b5d565b8060405162461bcd60e51b81526004016102129190610dde565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610212565b6001600160e01b0319811663bc197c8160e01b14610a8e5760405162461bcd60e51b815260040161021290611464565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c2c57610c2c611229565b602090810291909101015292915050565b6001600160a01b0384163b156107885760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c8190899089908890889088906004016114ac565b6020604051808303816000875af1925050508015610cbc575060408051601f3d908101601f19168201909252610cb9918101906113a1565b60015b610cc857610b226113be565b6001600160e01b0319811663f23a6e6160e01b14610a8e5760405162461bcd60e51b815260040161021290611464565b80356001600160a01b0381168114610d0f57600080fd5b919050565b60008060408385031215610d2757600080fd5b610d3083610cf8565b946020939093013593505050565b6001600160e01b03198116811461051a57600080fd5b600060208284031215610d6657600080fd5b8135610d7181610d3e565b9392505050565b600060208284031215610d8a57600080fd5b5035919050565b6000815180845260005b81811015610db757602081850181015186830182015201610d9b565b81811115610dc9576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610d716020830184610d91565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610e2d57610e2d610df1565b6040525050565b600067ffffffffffffffff821115610e4e57610e4e610df1565b5060051b60200190565b600082601f830112610e6957600080fd5b81356020610e7682610e34565b604051610e838282610e07565b83815260059390931b8501820192828101915086841115610ea357600080fd5b8286015b84811015610ebe5780358352918301918301610ea7565b509695505050505050565b600082601f830112610eda57600080fd5b813567ffffffffffffffff811115610ef457610ef4610df1565b604051610f0b601f8301601f191660200182610e07565b818152846020838601011115610f2057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610f5557600080fd5b610f5e86610cf8565b9450610f6c60208701610cf8565b9350604086013567ffffffffffffffff80821115610f8957600080fd5b610f9589838a01610e58565b94506060880135915080821115610fab57600080fd5b610fb789838a01610e58565b93506080880135915080821115610fcd57600080fd5b50610fda88828901610ec9565b9150509295509295909350565b60008060408385031215610ffa57600080fd5b823567ffffffffffffffff8082111561101257600080fd5b818501915085601f83011261102657600080fd5b8135602061103382610e34565b6040516110408282610e07565b83815260059390931b850182019282810191508984111561106057600080fd5b948201945b838610156110855761107686610cf8565b82529482019490820190611065565b9650508601359250508082111561109b57600080fd5b506110a885828601610e58565b9150509250929050565b600081518084526020808501945080840160005b838110156110e2578151875295820195908201906001016110c6565b509495945050505050565b602081526000610d7160208301846110b2565b60006020828403121561111257600080fd5b610d7182610cf8565b6000806040838503121561112e57600080fd5b61113783610cf8565b91506020830135801515811461114c57600080fd5b809150509250929050565b6000806040838503121561116a57600080fd5b61117383610cf8565b915061118160208401610cf8565b90509250929050565b600080600080600060a086880312156111a257600080fd5b6111ab86610cf8565b94506111b960208701610cf8565b93506040860135925060608601359150608086013567ffffffffffffffff8111156111e357600080fd5b610fda88828901610ec9565b600181811c9082168061120357607f821691505b60208210810361122357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112675761126761123f565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156113105761131061123f565b500190565b60408152600061132860408301856110b2565b828103602084015261133a81856110b2565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061136f908301866110b2565b828103606084015261138181866110b2565b905082810360808401526113958185610d91565b98975050505050505050565b6000602082840312156113b357600080fd5b8151610d7181610d3e565b600060033d11156113d75760046000803e5060005160e01c5b90565b600060443d10156113e85790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561141857505050505090565b82850191508151818111156114305750505050505090565b843d870101602082850101111561144a5750505050505090565b61145960208286010187610e07565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114e690830184610d91565b97965050505050505056fea2646970667358221220ef636d32ed737e60f09984640373bde4f2197b0eed8e874a7595ec93848f6d8964736f6c634300080d0033";

type ERC1155TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Test__factory extends ContractFactory {
  constructor(...args: ERC1155TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155Test";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Test> {
    return super.deploy(overrides || {}) as Promise<ERC1155Test>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Test {
    return super.attach(address) as ERC1155Test;
  }
  connect(signer: Signer): ERC1155Test__factory {
    return super.connect(signer) as ERC1155Test__factory;
  }
  static readonly contractName: "ERC1155Test";
  public readonly contractName: "ERC1155Test";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TestInterface {
    return new utils.Interface(_abi) as ERC1155TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Test {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Test;
  }
}
