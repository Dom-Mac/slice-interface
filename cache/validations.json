{
  "version": "3.2",
  "log": [
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "6107ed61d81a108a1584160fd73a1fe607ae9cb32ac05bf5f581c4e2540547bc",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "a7e9827d1756fc52cdc5c7827a9e8df64bbcbe7df15bf4939519f547f45fa054",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "0592415050c2f4a1750c962675a308fc39c575b07bab53c145bd05fd78e1e33d",
          "withoutMetadata": "8b0b51736be4e3f0cc99c8e9f6da13e7b66e710be1059571f4a73f323b386fc0",
          "linkedWithoutMetadata": "8b0b51736be4e3f0cc99c8e9f6da13e7b66e710be1059571f4a73f323b386fc0"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "unreleasedBatch(address,address[])",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "implementation()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:112",
        "version": {
          "withMetadata": "88157b03f5d0041997b2a6b9a6e50330f29a053e753d23b0c275311345864f78",
          "withoutMetadata": "b2a3ae24045bcc524c5da48bd10e8a3cb268d55ba44ff63971f6ea388457d41e",
          "linkedWithoutMetadata": "b2a3ae24045bcc524c5da48bd10e8a3cb268d55ba44ff63971f6ea388457d41e"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:148"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7137_storage)",
              "src": "contracts/slicer_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7137_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7137_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "462922096431bc946f00c88cc21637ab6ab684bad5658c6c61f1ca95c689b7de",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:112",
        "version": {
          "withMetadata": "40c95514568c9e03d8303d77ea270cb2210cc43ae292088999283822230a2a6a",
          "withoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2",
          "linkedWithoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV0",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:141"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v0.sol:142"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:143"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:144"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:145"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v0.sol:146"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v0.sol:147"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v0.sol:148"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV0",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9482_storage)",
              "src": "contracts/test/slicer_test_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9482_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV0.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9482_storage": {
              "label": "struct SlicerProductsDummyV0.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:112",
        "version": {
          "withMetadata": "e7cb00fc2b7fcc6e04552cb2b06ac305a7d0d940b6d3b7c0b2715e6e80f4c14f",
          "withoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a",
          "linkedWithoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummyV1"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV1",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV1",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)10946_storage)",
              "src": "contracts/test/slicer_test_v1.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)10946_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV1.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)10946_storage": {
              "label": "struct SlicerProductsDummyV1.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "6ae732c0ba88a9083d3820e336c59b66ce9323d5930a96070735fa6cd787186f",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "16f701ea38ac9a9c623dd51b3cdb1a4a0819cbcd0e9fe5640f1d457de28fccc5",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "57516a46f98acb461cbd032f947484d4e0005754367f44fccf3ba10bba0bc07d",
          "withoutMetadata": "fec8b983ec154f1fec8fc5ae81cc7fe03bb8257e7766d2cdff284546c28b9a23",
          "linkedWithoutMetadata": "fec8b983ec154f1fec8fc5ae81cc7fe03bb8257e7766d2cdff284546c28b9a23"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "unreleasedBatch(address,address[])",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "implementation()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:112",
        "version": {
          "withMetadata": "7ce60fac24e65cd45e5cf031312ac0984c54668744af7d450990e049c3334436",
          "withoutMetadata": "b2a3ae24045bcc524c5da48bd10e8a3cb268d55ba44ff63971f6ea388457d41e",
          "linkedWithoutMetadata": "b2a3ae24045bcc524c5da48bd10e8a3cb268d55ba44ff63971f6ea388457d41e"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:148"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7136_storage)",
              "src": "contracts/slicer_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7136_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7136_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "280a6341d6997023a594fec1c4f27f099fe11cee38137145b3561ad9dc313297",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:112",
        "version": {
          "withMetadata": "aba1dd60137b93d675b8edb32800b138183743ab4fb150f0045614a8405d6ef7",
          "withoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2",
          "linkedWithoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV0",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:141"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v0.sol:142"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:143"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:144"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:145"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v0.sol:146"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v0.sol:147"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v0.sol:148"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV0",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9481_storage)",
              "src": "contracts/test/slicer_test_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9481_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV0.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9481_storage": {
              "label": "struct SlicerProductsDummyV0.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:112",
        "version": {
          "withMetadata": "e4586cee345f9de38aeb54a69c797385e9801b13d4611f36654f7c714b992c2f",
          "withoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a",
          "linkedWithoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummyV1"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV1",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV1",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)10945_storage)",
              "src": "contracts/test/slicer_test_v1.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)10945_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV1.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)10945_storage": {
              "label": "struct SlicerProductsDummyV1.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "42fab95d2898c7305e3c488f556efb0e2f0e37f2bbb38b5c7e02740b6f5f278f",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "eded42c92acf809a7041423293df10ebd8cb99b9bfc06bbb9b35f326f14cd567",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "fc3ca996a4fd4aaf1f7f624a74333016f39c962f7233c65d698d0271f3ef603c",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:112",
        "version": {
          "withMetadata": "816831510db16fedf23b8cabe16d6c70b7c1f2db3793c958f225ff44c12caa76",
          "withoutMetadata": "b2a3ae24045bcc524c5da48bd10e8a3cb268d55ba44ff63971f6ea388457d41e",
          "linkedWithoutMetadata": "b2a3ae24045bcc524c5da48bd10e8a3cb268d55ba44ff63971f6ea388457d41e"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:148"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7086_storage)",
              "src": "contracts/slicer_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7086_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7086_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "deedb51a09d01debeca8885b7eb940dfd7608e512ab5d69cf69de27baf884444",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:112",
        "version": {
          "withMetadata": "472c63be384b81ee762beb6e38d50ad658aa63e013aa8a2155d3a501ad859efc",
          "withoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2",
          "linkedWithoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV0",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:141"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v0.sol:142"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:143"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:144"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:145"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v0.sol:146"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v0.sol:147"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v0.sol:148"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV0",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9431_storage)",
              "src": "contracts/test/slicer_test_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9431_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV0.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9431_storage": {
              "label": "struct SlicerProductsDummyV0.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:112",
        "version": {
          "withMetadata": "30d9adeb8e02a5229e8b19f1adc0c49a89b36055d88cb66af2f3d1de0ad7e5cb",
          "withoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a",
          "linkedWithoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummyV1"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV1",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV1",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)10895_storage)",
              "src": "contracts/test/slicer_test_v1.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)10895_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV1.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)10895_storage": {
              "label": "struct SlicerProductsDummyV1.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "cbb5957279eba1ccd3728b4c8d2028f7c6530bc6b4c48fdc4cfb01ba626ba745",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "3a3181f01095a24a09ab80d760b945e41e9003c62e98a83d23bb5a03ab29dee0",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "0758c338b5e7b528e939e4d72586bcd9b430a719ad91685a0482e4946947af4f",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:112",
        "version": {
          "withMetadata": "4c86b121d32e62baac81f99a9368c73d30acddfa2189516b988c09c96653b21a",
          "withoutMetadata": "a9201767d57fb93790ee0355f423cc23a6cfb916fe1ed2b677e8a2c96a8d8467",
          "linkedWithoutMetadata": "a9201767d57fb93790ee0355f423cc23a6cfb916fe1ed2b677e8a2c96a8d8467"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:148"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7086_storage)",
              "src": "contracts/slicer_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7086_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7086_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "16b928ca7bd4e03183e206283f29e1597e3f60a5ddf61fc490b928eb24c48c47",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:112",
        "version": {
          "withMetadata": "b5611f8f39837575770b716795dc818e99855f54ff147a81f5f977d563eee9d3",
          "withoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2",
          "linkedWithoutMetadata": "c165a0c3c3c34dc4cfab81b6117a48fcf4a53f4dd31c1b128d99ae2e7951baa2"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV0",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:141"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v0.sol:142"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:143"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:144"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:145"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v0.sol:146"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v0.sol:147"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v0.sol:148"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v0.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV0",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9431_storage)",
              "src": "contracts/test/slicer_test_v0.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9431_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV0.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9431_storage": {
              "label": "struct SlicerProductsDummyV0.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:112",
        "version": {
          "withMetadata": "a7b3c769a1618c34519325385a5997611f4e19f6b82ec5ed88464cb1006b1d6d",
          "withoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a",
          "linkedWithoutMetadata": "73861d1a70873d4d4cba95a7461b57817be5ca878d116f2a8ee2f5d48d7abb4a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummyV1"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV1",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:149"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV1",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)10895_storage)",
              "src": "contracts/test/slicer_test_v1.sol:58"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)10895_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV1.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)10895_storage": {
              "label": "struct SlicerProductsDummyV1.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "77922d2aa6951ebf465136c8427678f4571ca39942a7bc0fb5646f79c7366e1d",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "cdca712cfaa00516bfa2e772e91cc59d78d09e7594ddb665ea2efbae5e45e7ff",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "680218552049ff9e3ae27d586566b18e27363344b53590f0dbdf2b720f1c2618",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "7cbb871c7b1161b09c7360b9cbf78727d8eb98ec672a18694f0305a5f46bd5f3",
          "withoutMetadata": "10f8a8501eebb7e972d36297b090a30826b8d9a32e0ef9a84f6f06e5e126d10d",
          "linkedWithoutMetadata": "10f8a8501eebb7e972d36297b090a30826b8d9a32e0ef9a84f6f06e5e126d10d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7084_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7084_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7084_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "cabeb5fb1c4f729e3c81a025319cbfe57b2a937e2ca239987418a2801df2c7f0",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:111",
        "version": {
          "withMetadata": "f147fae3a53360beeb2bd9015e700d28ea44691876cff0b810ca9f0ef67fd81f",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV0",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:140"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v0.sol:141"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:142"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:143"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:144"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v0.sol:145"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v0.sol:146"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v0.sol:147"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV0",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9426_storage)",
              "src": "contracts/test/slicer_test_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9426_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV0.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9426_storage": {
              "label": "struct SlicerProductsDummyV0.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:111",
        "version": {
          "withMetadata": "60e5692b7a33ca222494504f7d4afbb5ad8a7d88ed5d18a16cb2415c52e0141d",
          "withoutMetadata": "c4f9dcc820698b8375e1a535f8334b477ef09463a9869a774be295bacb41d98d",
          "linkedWithoutMetadata": "c4f9dcc820698b8375e1a535f8334b477ef09463a9869a774be295bacb41d98d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummyV1"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV1",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:140"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV1",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)10887_storage)",
              "src": "contracts/test/slicer_test_v1.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)10887_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV1.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)10887_storage": {
              "label": "struct SlicerProductsDummyV1.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "1e72eceb5141c5e767d3ebe1b660ed8de8910271d84cddd5c1926367521dfacc",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "6187ebea8a8291c5039927de21ea5a9b01a4cbf964d8cbfc3078b91b9aedc5dc",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "05eecb2348455ac0f67f21622f1a6526927fcf133a63144a1f7e6126e6339d5d",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4a7db25a02dd4381a48e588510251146185611bea5ee527dc03bbb9b2d19916b",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7084_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7084_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7084_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "eaff9a502303ad6b645df9d932c75ca0273ba72e4db66551f2f21c4ef6f6a2f6",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:111",
        "version": {
          "withMetadata": "552b08bb588916b99556e9f8c1f48e5d515bf63cac05fbf91ac2c6ad670ed4b8",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV0",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:140"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v0.sol:141"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:142"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:143"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v0.sol:144"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v0.sol:145"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v0.sol:146"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v0.sol:147"
            },
            {
              "contract": "SlicerDummyV0",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV0": {
        "src": "contracts/test/slicer_test_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV0",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9426_storage)",
              "src": "contracts/test/slicer_test_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9426_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV0.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9426_storage": {
              "label": "struct SlicerProductsDummyV0.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:111",
        "version": {
          "withMetadata": "a70cba8b29c2edcf936439dc3996afba5c680c10e72ada7f65eeeb1c36d708e6",
          "withoutMetadata": "c4f9dcc820698b8375e1a535f8334b477ef09463a9869a774be295bacb41d98d",
          "linkedWithoutMetadata": "c4f9dcc820698b8375e1a535f8334b477ef09463a9869a774be295bacb41d98d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummyV1"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummyV1",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:140"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummyV1",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummyV1": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummyV1",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)10887_storage)",
              "src": "contracts/test/slicer_test_v1.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)10887_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummyV1.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)10887_storage": {
              "label": "struct SlicerProductsDummyV1.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "1e72eceb5141c5e767d3ebe1b660ed8de8910271d84cddd5c1926367521dfacc",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "6187ebea8a8291c5039927de21ea5a9b01a4cbf964d8cbfc3078b91b9aedc5dc",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "05eecb2348455ac0f67f21622f1a6526927fcf133a63144a1f7e6126e6339d5d",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4a7db25a02dd4381a48e588510251146185611bea5ee527dc03bbb9b2d19916b",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7084_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7084_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7084_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "eaff9a502303ad6b645df9d932c75ca0273ba72e4db66551f2f21c4ef6f6a2f6",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummy": {
        "src": "contracts/test/slicer_test_v1.sol:111",
        "version": {
          "withMetadata": "c1a47abb8fa0aa77c87eca0c986eecf87ec87b640cdef468dc7de2c907524b25",
          "withoutMetadata": "c4f9dcc820698b8375e1a535f8334b477ef09463a9869a774be295bacb41d98d",
          "linkedWithoutMetadata": "c4f9dcc820698b8375e1a535f8334b477ef09463a9869a774be295bacb41d98d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummy"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummy",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:140"
            },
            {
              "contract": "SlicerDummy",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummy",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummy",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummy",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummy",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummy",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummy",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummy",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummy": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummy",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9426_storage)",
              "src": "contracts/test/slicer_test_v1.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9426_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummy.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9426_storage": {
              "label": "struct SlicerProductsDummy.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "1e72eceb5141c5e767d3ebe1b660ed8de8910271d84cddd5c1926367521dfacc",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "6187ebea8a8291c5039927de21ea5a9b01a4cbf964d8cbfc3078b91b9aedc5dc",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "05eecb2348455ac0f67f21622f1a6526927fcf133a63144a1f7e6126e6339d5d",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4a7db25a02dd4381a48e588510251146185611bea5ee527dc03bbb9b2d19916b",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7084_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7084_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7084_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "eaff9a502303ad6b645df9d932c75ca0273ba72e4db66551f2f21c4ef6f6a2f6",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummy": {
        "src": "contracts/test/slicer_test_v1.sol:111",
        "version": {
          "withMetadata": "eb522d1e88a109779a3d8291bd2c1e3d6b080bccf98212ba72637875e75c94bd",
          "withoutMetadata": "3f03cf8bb0021382bb55aaff71027dcd13e2c7bc7b33d25293065ba7b0e81c14",
          "linkedWithoutMetadata": "3f03cf8bb0021382bb55aaff71027dcd13e2c7bc7b33d25293065ba7b0e81c14"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummy"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "testDummy()",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummy",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:140"
            },
            {
              "contract": "SlicerDummy",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummy",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummy",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummy",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummy",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummy",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummy",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummy",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummy": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummy",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9426_storage)",
              "src": "contracts/test/slicer_test_v1.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9426_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummy.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9426_storage": {
              "label": "struct SlicerProductsDummy.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "1e72eceb5141c5e767d3ebe1b660ed8de8910271d84cddd5c1926367521dfacc",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "6187ebea8a8291c5039927de21ea5a9b01a4cbf964d8cbfc3078b91b9aedc5dc",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "05eecb2348455ac0f67f21622f1a6526927fcf133a63144a1f7e6126e6339d5d",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4a7db25a02dd4381a48e588510251146185611bea5ee527dc03bbb9b2d19916b",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7084_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7084_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7084_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "eaff9a502303ad6b645df9d932c75ca0273ba72e4db66551f2f21c4ef6f6a2f6",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerDummy": {
        "src": "contracts/test/slicer_test_v1.sol:111",
        "version": {
          "withMetadata": "c1dc2e97373a797aaf3d917aefb2edaa168f9d775488d49f1172ddceab8078a4",
          "withoutMetadata": "3f03cf8bb0021382bb55aaff71027dcd13e2c7bc7b33d25293065ba7b0e81c14",
          "linkedWithoutMetadata": "3f03cf8bb0021382bb55aaff71027dcd13e2c7bc7b33d25293065ba7b0e81c14"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProductsDummy"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "testDummy()",
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerDummy",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:140"
            },
            {
              "contract": "SlicerDummy",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/test/slicer_test_v1.sol:141"
            },
            {
              "contract": "SlicerDummy",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:142"
            },
            {
              "contract": "SlicerDummy",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:143"
            },
            {
              "contract": "SlicerDummy",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/test/slicer_test_v1.sol:144"
            },
            {
              "contract": "SlicerDummy",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test/slicer_test_v1.sol:145"
            },
            {
              "contract": "SlicerDummy",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/test/slicer_test_v1.sol:146"
            },
            {
              "contract": "SlicerDummy",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/test/slicer_test_v1.sol:147"
            },
            {
              "contract": "SlicerDummy",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/test/slicer_test_v1.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProductsDummy": {
        "src": "contracts/test/slicer_test_v1.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProductsDummy",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)9426_storage)",
              "src": "contracts/test/slicer_test_v1.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)9426_storage)": {
              "label": "mapping(uint32 => struct SlicerProductsDummy.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)9426_storage": {
              "label": "struct SlicerProductsDummy.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "1e72eceb5141c5e767d3ebe1b660ed8de8910271d84cddd5c1926367521dfacc",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "6187ebea8a8291c5039927de21ea5a9b01a4cbf964d8cbfc3078b91b9aedc5dc",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "05eecb2348455ac0f67f21622f1a6526927fcf133a63144a1f7e6126e6339d5d",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4a7db25a02dd4381a48e588510251146185611bea5ee527dc03bbb9b2d19916b",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7084_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7084_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7084_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "eaff9a502303ad6b645df9d932c75ca0273ba72e4db66551f2f21c4ef6f6a2f6",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/utils/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/utils/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/utils/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "0b4d5cafe4585b8939b16b33dd2991ebc150563863f0b0de7e9226e17e6b1848",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "0eb9d75d0a4d40a1b9946a2398b8163741566b094a525ddb5fb7155d5c7d5f97",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "3c60423bc38e84c9b3877964aace51e45db77e674faed116119268a396bab270",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4d9bd834dc9adc7bae1c2b197c18b50f2df39b4c55ce6a86296ab8d573a2c185",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7210_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7210_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7210_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/test/slice_test_v1.sol:22",
        "version": {
          "withMetadata": "0ae3d103322b6706558cced5dd8ca59f3a5d44aa3a1f2e9c623f234121f35c37",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/test/slice_test_v1.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/test/slice_test_v1.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/test/slice_test_v1.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/test/slice_test_v1.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/test/slice_test_v1.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "0b4d5cafe4585b8939b16b33dd2991ebc150563863f0b0de7e9226e17e6b1848",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "0eb9d75d0a4d40a1b9946a2398b8163741566b094a525ddb5fb7155d5c7d5f97",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/slice_dummy_v0.sol:22",
        "version": {
          "withMetadata": "b20969a4ccf0286e3cfac66c827e7c1adffb18f803dafda0193ec21e5e5713fb",
          "withoutMetadata": "ec60bd493d0b6f5acee5464ce48a073da17ed862d3c664cac759024ff3a939d3",
          "linkedWithoutMetadata": "ec60bd493d0b6f5acee5464ce48a073da17ed862d3c664cac759024ff3a939d3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_dummy_v0.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_dummy_v0.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_dummy_v0.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_dummy_v0.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_dummy_v0.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_dummy_v0.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_dummy_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_uint16": {
              "label": "uint16"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "3c60423bc38e84c9b3877964aace51e45db77e674faed116119268a396bab270",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4d9bd834dc9adc7bae1c2b197c18b50f2df39b4c55ce6a86296ab8d573a2c185",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)8091_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)8091_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)8091_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "0b4d5cafe4585b8939b16b33dd2991ebc150563863f0b0de7e9226e17e6b1848",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "0eb9d75d0a4d40a1b9946a2398b8163741566b094a525ddb5fb7155d5c7d5f97",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceDummy": {
        "src": "contracts/slice_dummy_v0.sol:22",
        "version": {
          "withMetadata": "f1805cb91631a90fde751526af0cff247967f06d1760fb7ae776be829ddce5c3",
          "withoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605",
          "linkedWithoutMetadata": "c369721ec55bd8da80a2249ce80c6cedfb5b3d762db32ff08d71ec0b9cb6e605"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "testDummy()",
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceDummy",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_dummy_v0.sol:48"
            },
            {
              "contract": "SliceDummy",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_dummy_v0.sol:50"
            },
            {
              "contract": "SliceDummy",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_dummy_v0.sol:51"
            },
            {
              "contract": "SliceDummy",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_dummy_v0.sol:52"
            },
            {
              "contract": "SliceDummy",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_dummy_v0.sol:53"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_dummy_v0.sol:54"
            },
            {
              "contract": "SliceDummy",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_dummy_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "3c60423bc38e84c9b3877964aace51e45db77e674faed116119268a396bab270",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4d9bd834dc9adc7bae1c2b197c18b50f2df39b4c55ce6a86296ab8d573a2c185",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)8091_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)8091_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)8091_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "0b4d5cafe4585b8939b16b33dd2991ebc150563863f0b0de7e9226e17e6b1848",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "0eb9d75d0a4d40a1b9946a2398b8163741566b094a525ddb5fb7155d5c7d5f97",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "3c60423bc38e84c9b3877964aace51e45db77e674faed116119268a396bab270",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4d9bd834dc9adc7bae1c2b197c18b50f2df39b4c55ce6a86296ab8d573a2c185",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7210_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7210_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7210_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/ownableSlice.sol:7",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:8"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/ownableSlice.sol:9"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/ownableSlice.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slc_v0.sol:15",
        "version": {
          "withMetadata": "0b4d5cafe4585b8939b16b33dd2991ebc150563863f0b0de7e9226e17e6b1848",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slc_v0.sol:24"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slc_v0.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/sliceCore_v0.sol:21",
        "version": {
          "withMetadata": "0eb9d75d0a4d40a1b9946a2398b8163741566b094a525ddb5fb7155d5c7d5f97",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/sliceCore_v0.sol:30"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/sliceCore_v0.sol:31"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/sliceCore_v0.sol:32"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/sliceCore_v0.sol:33"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/sliceCore_v0.sol:34"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/sliceCore_v0.sol:35"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:22",
        "version": {
          "withMetadata": "3c60423bc38e84c9b3877964aace51e45db77e674faed116119268a396bab270",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:48"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:50"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:51"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:52"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:53"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:54"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:55"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slicer_v0.sol:111",
        "version": {
          "withMetadata": "4d9bd834dc9adc7bae1c2b197c18b50f2df39b4c55ce6a86296ab8d573a2c185",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:140"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slicer_v0.sol:141"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:142"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:143"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slicer_v0.sol:144"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slicer_v0.sol:145"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slicer_v0.sol:146"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slicer_v0.sol:147"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slicer_v0.sol:148"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slicer_v0.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7210_storage)",
              "src": "contracts/slicer_v0.sol:57"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7210_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7210_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slice_v0.sol:86",
        "version": {
          "withMetadata": "9c2ea641d1367940fabde8fdcf7f56b9e95830211dede103dbf47496bc2eb572",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:448",
        "version": {
          "withMetadata": "7211259ab0dc4403516389d7babfdd137d21776141ff2a01fad7789d57ac9eaa",
          "withoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1",
          "linkedWithoutMetadata": "a530af6e22c8d9cf27befbf457b2d307faa26c17f06b4f73de56f44320feb2a1"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint32[],uint16[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint16,uint16)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:474"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:476"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:477"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:478"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:479"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:480"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint16",
              "src": "contracts/slice_v0.sol:481"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/slice_v0.sol:203",
        "version": {
          "withMetadata": "a38373cefba15e0ffe2adbfca530bb4251a3f80f0249da915ae608e3f3d48616",
          "withoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3",
          "linkedWithoutMetadata": "b53e24c9941231bf43886da538fc3744e55312614149678e26fd28b706cc98c3"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:212"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/slice_v0.sol:213"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/slice_v0.sol:214"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:215"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:216"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint32,t_address)",
              "src": "contracts/slice_v0.sol:217"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slice_v0.sol:914",
        "version": {
          "withMetadata": "698676b3c49471071d2fe8f7638aae65ec5525b91ff0b468ef14c2f71edf92e5",
          "withoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1",
          "linkedWithoutMetadata": "1f83ea6711e7180cd9824f1308e14c674650afd9af201c24602d972e835099f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint32,bytes,bytes)",
          "setProductCategory(uint32,uint32)",
          "setProductInfo(uint32,bool,uint32,uint256)",
          "toggleUSDPrice(uint32,bool)",
          "removeProduct(uint32)",
          "_payProduct(address,uint32,uint16)",
          "validatePurchase(uint32)",
          "paySLC(uint32[],uint16[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:943"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:944"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:945"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:946"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:947"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slice_v0.sol:948"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slice_v0.sol:949"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slice_v0.sol:950"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slice_v0.sol:951"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slice_v0.sol:821",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint32,t_struct(Product)7191_storage)",
              "src": "contracts/slice_v0.sol:860"
            }
          ],
          "types": {
            "t_mapping(t_uint32,t_struct(Product)7191_storage)": {
              "label": "mapping(uint32 => struct SlicerProducts.Product)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Product)7191_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint32"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint32)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slice_v0.sol:86",
        "version": {
          "withMetadata": "ece86a292f9d39c30803fa735bf49baf2af7219b3fa1a0ad6649f3de43fbafd7",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:448",
        "version": {
          "withMetadata": "60c76ef795c95d83c63b2b6ade79e516fc0d7edcc80e3f2e94b4820eb64207a5",
          "withoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c",
          "linkedWithoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:474"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:476"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:477"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:478"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:479"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:480"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:481"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/slice_v0.sol:203",
        "version": {
          "withMetadata": "80827cd5203f6d4abe754b9b96fb0dd9e77ec3ecd3877e34ce5059c51e59eeee",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:212"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/slice_v0.sol:213"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/slice_v0.sol:214"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:215"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:216"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:217"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slice_v0.sol:914",
        "version": {
          "withMetadata": "979ed2a7d63e6828bf9c1b911279dec9a7be281a002f5c274f6381765f71f9ad",
          "withoutMetadata": "c453c1c00ad97dd836163845f04f192bb1b37e9bc1623227ac7040f75621d9d5",
          "linkedWithoutMetadata": "c453c1c00ad97dd836163845f04f192bb1b37e9bc1623227ac7040f75621d9d5"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:943"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:944"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:945"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:946"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:947"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slice_v0.sol:948"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slice_v0.sol:949"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slice_v0.sol:950"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slice_v0.sol:951"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slice_v0.sol:821",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7188_storage)",
              "src": "contracts/slice_v0.sol:860"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7188_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7188_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slice_v0.sol:86",
        "version": {
          "withMetadata": "40e31cd259452acb055cba4e390c28898b783df708aa9a8dd563ce4838107ad4",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:443",
        "version": {
          "withMetadata": "add3d6797e8837392b83851720449f8ae52b0e6511cb9c9be2db853b46f20571",
          "withoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c",
          "linkedWithoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/slice_v0.sol:203",
        "version": {
          "withMetadata": "d16331dbab87ac5d980205c72e63e92634af2761d97635e80b340171b0e0238d",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slice_v0.sol:904",
        "version": {
          "withMetadata": "291066cdbe8fe3657ee2023647a593d5cc002fe485d250960f875774621d14b6",
          "withoutMetadata": "c453c1c00ad97dd836163845f04f192bb1b37e9bc1623227ac7040f75621d9d5",
          "linkedWithoutMetadata": "c453c1c00ad97dd836163845f04f192bb1b37e9bc1623227ac7040f75621d9d5"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7188_storage)",
              "src": "contracts/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7188_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7188_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slice_v0.sol:86",
        "version": {
          "withMetadata": "40e31cd259452acb055cba4e390c28898b783df708aa9a8dd563ce4838107ad4",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:443",
        "version": {
          "withMetadata": "add3d6797e8837392b83851720449f8ae52b0e6511cb9c9be2db853b46f20571",
          "withoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c",
          "linkedWithoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/slice_v0.sol:203",
        "version": {
          "withMetadata": "d16331dbab87ac5d980205c72e63e92634af2761d97635e80b340171b0e0238d",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slice_v0.sol:904",
        "version": {
          "withMetadata": "291066cdbe8fe3657ee2023647a593d5cc002fe485d250960f875774621d14b6",
          "withoutMetadata": "c453c1c00ad97dd836163845f04f192bb1b37e9bc1623227ac7040f75621d9d5",
          "linkedWithoutMetadata": "c453c1c00ad97dd836163845f04f192bb1b37e9bc1623227ac7040f75621d9d5"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7188_storage)",
              "src": "contracts/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7188_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7188_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slice_v0.sol:86",
        "version": {
          "withMetadata": "41f292592e538e6fa2dd28ee059c6be05dac26012bf667bf3aad2d71b73a89d7",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:443",
        "version": {
          "withMetadata": "9b07b1fb364faa927de47a4398e56208fe94f27e6315d6068c62a3df7e3dab61",
          "withoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c",
          "linkedWithoutMetadata": "063b0b12e6f1e98acbbb205e024e1ea257ba5ff3bc18bfba3af90e000ef1355c"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/slice_v0.sol:203",
        "version": {
          "withMetadata": "0c00e8465a103a4251d8a47f00279338121b84301605a49bb25937d0387b8864",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slice_v0.sol:904",
        "version": {
          "withMetadata": "be8389f320198fe04baad5b2892b5d643ecb8fd4d9d8a6229ff2032aafffea3e",
          "withoutMetadata": "645c90fa98adc6c1f3df93882c576f65efc045ea48c3e55703a9e4eff7449d11",
          "linkedWithoutMetadata": "645c90fa98adc6c1f3df93882c576f65efc045ea48c3e55703a9e4eff7449d11"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7188_storage)",
              "src": "contracts/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7188_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7188_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/slice_v0.sol:86",
        "version": {
          "withMetadata": "4b24c878543f5f6f7b02d9378e00f7eb900b03df77208739444dbb0ef0d736c1",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/slice_v0.sol:443",
        "version": {
          "withMetadata": "417a7c67cca881af0105b7944fd45ac2c6f6f0a3ca31f440d7aaaa4c2f65684c",
          "withoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4",
          "linkedWithoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/slice_v0.sol:203",
        "version": {
          "withMetadata": "46db2638b4118b2b3c5ec3aaff164a457e3fc46c6c945eea3812aead7ddf4ded",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/slice_v0.sol:905",
        "version": {
          "withMetadata": "c216d51599424bf31cfaa729c455fd1445c0dfbf30d35615496391a836dc53e0",
          "withoutMetadata": "645c90fa98adc6c1f3df93882c576f65efc045ea48c3e55703a9e4eff7449d11",
          "linkedWithoutMetadata": "645c90fa98adc6c1f3df93882c576f65efc045ea48c3e55703a9e4eff7449d11"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/slice_v0.sol:941"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/slice_v0.sol:942"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/slice_v0.sol:812",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7190_storage)",
              "src": "contracts/slice_v0.sol:851"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7190_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7190_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:86",
        "version": {
          "withMetadata": "9f2e4f5e32f0457d5b91968f2d1df69277f55f21de93ca9bb2d7db8f84a2db33",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:443",
        "version": {
          "withMetadata": "bc8bb15c453deac5b93904e0a5f51da57951025e98489662d3f9db55369a5945",
          "withoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4",
          "linkedWithoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:203",
        "version": {
          "withMetadata": "956809b100ed820dd97172f5d5dc1c9704e9152ae68ea2f5631748e2f2413d07",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:905",
        "version": {
          "withMetadata": "ba3c3d1c50e815442d8c3c08bce47687fdfc15014a4723d0171749820e3c4592",
          "withoutMetadata": "645c90fa98adc6c1f3df93882c576f65efc045ea48c3e55703a9e4eff7449d11",
          "linkedWithoutMetadata": "645c90fa98adc6c1f3df93882c576f65efc045ea48c3e55703a9e4eff7449d11"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:942"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:812",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7190_storage)",
              "src": "contracts/compile/slice_v0.sol:851"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7190_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7190_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:86",
        "version": {
          "withMetadata": "43b9442170a666cb7fd2169ae7768d268dbd6e46500fb5477502c165b2967606",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:443",
        "version": {
          "withMetadata": "1d119250b216074136bb2482f8bb7ddb50fb585b1317acad06ba274fabda68dd",
          "withoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4",
          "linkedWithoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:203",
        "version": {
          "withMetadata": "691ea0adcefd7114d0e58e99d81131e6538c553c247154631c085773712ef217",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:905",
        "version": {
          "withMetadata": "18524c89df91cde5d87974207b7977137e5a0cb583eeed87ee2a3da8867a19e1",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:942"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:812",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7190_storage)",
              "src": "contracts/compile/slice_v0.sol:851"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7190_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7190_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:25",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:26"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:85",
        "version": {
          "withMetadata": "1b303fed1509bc1cf4ee135beacbb3f686a49d0b76484e5c4b60aeec0171ef6d",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:94"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:442",
        "version": {
          "withMetadata": "ef71866127a207d4d057bb01cbb95a0e3086deff43ec7ce1efa9830a35880792",
          "withoutMetadata": "132ccc973d5d15d514f4e48c569ee8a187649fcbbab6e33c57b4f69604aaec38",
          "linkedWithoutMetadata": "132ccc973d5d15d514f4e48c569ee8a187649fcbbab6e33c57b4f69604aaec38"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:463"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:465"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:202",
        "version": {
          "withMetadata": "357b56c2e8d6217e9d0e4c8942873c2c8eac504eb295698bfa27e9fe874a4f3e",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:206"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:211"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:904",
        "version": {
          "withMetadata": "f81582e14c2eacdd3f7433fe6fa0d8a8d86e70f71f27b735e31097bd02231d31",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7047_storage)",
              "src": "contracts/compile/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7047_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7047_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:25",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:26"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:85",
        "version": {
          "withMetadata": "50e2eea2be8104e298aab89ad29367ec979bc065ee0d84dcbda24461b77baa81",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:94"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:442",
        "version": {
          "withMetadata": "9e63adbc10625907b01f720b31e2c13669eecdfb4df1c6cec19b3556f9250e61",
          "withoutMetadata": "613d25419c576625441811e4b2060715bfb552b488d23f3a6f38c7f4193343ae",
          "linkedWithoutMetadata": "613d25419c576625441811e4b2060715bfb552b488d23f3a6f38c7f4193343ae"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:463"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:465"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:202",
        "version": {
          "withMetadata": "6c7672c2fd9b22da3ceed81da87844f5f8c21418b9de05ee80ce57a92d11fc5c",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:206"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:211"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:904",
        "version": {
          "withMetadata": "11a6c4e483b37cd871bff69ecf5a6cb7e1a04fa6ec20f7f3266ef72399ef851a",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7163_storage)",
              "src": "contracts/compile/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7163_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7163_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:25",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:26"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:85",
        "version": {
          "withMetadata": "d7a514c8def582d607089d9b788047640eb758a953f8b4f1516428bd5a037a14",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:94"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:442",
        "version": {
          "withMetadata": "e10608380ed4d7e271c3681c91c6238a8bd0fbb2f14e4251884f087ee131608f",
          "withoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4",
          "linkedWithoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:463"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:465"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:202",
        "version": {
          "withMetadata": "75a1cec0b1e019a32f3a0f7cb79410b31c6b5ba6fb133577610aac45788d2cea",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:206"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:211"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:904",
        "version": {
          "withMetadata": "644092568822960dfe7068947eeeaee784c2a13e20d77f309d7f6ba9ea5fe2db",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "AddressUpgradeable"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7189_storage)",
              "src": "contracts/compile/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7189_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7189_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:26",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:28"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:86",
        "version": {
          "withMetadata": "5d46718062e155083e3d405e3b2a8b76ec1c1bed758fe3030f1089705049bba0",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:95"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:443",
        "version": {
          "withMetadata": "6806041aa369c4c1ebb2292ba677e910201271831af539f1ba6b8e9c6952827b",
          "withoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4",
          "linkedWithoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:471"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:203",
        "version": {
          "withMetadata": "ccc195f0b4a4ce7c4d5720f77a44cbfb3f11f4a3de8667ed1750d31cd5ac18af",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:211"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:212"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:905",
        "version": {
          "withMetadata": "dd15b3a47b61fc57446bc035a8f80d05330a14ab25cac34783281591b8a228e1",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "AddressUpgradeable"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:942"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:812",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7190_storage)",
              "src": "contracts/compile/slice_v0.sol:851"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7190_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7190_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:25",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:26"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:85",
        "version": {
          "withMetadata": "6ee99f6e0de4d5f67ddb0cd862d787b322cebdbd3390a5bc465cc1e56658980a",
          "withoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542",
          "linkedWithoutMetadata": "da5a2ff24c18a350c28310da8bcd604dd761016fb2a2b66e8fb999c158c91542"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:94"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:442",
        "version": {
          "withMetadata": "d2603146630c87949ee8c7e5b4e64843f020b13b06bb1dea26c2f3937d6b58ae",
          "withoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4",
          "linkedWithoutMetadata": "889f20f60c8c9a7c61752aa8afd7353fb5768fd4c74c7ec9fa047d25ab749fe4"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:463"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:465"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:202",
        "version": {
          "withMetadata": "9ec68ef5e9607bbe38c671a423f8c71cdb0d94d3801468a440d78f09ddb6ac21",
          "withoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505",
          "linkedWithoutMetadata": "c54853dbcaa0f144655c051c04dbc8806fd6e0a5bad87ac4ab3272ebbc1a6505"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:206"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:211"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:904",
        "version": {
          "withMetadata": "79457e1aac5b55e7115472ae40bac9fa8c12fc0c518ebf6d08f6a0b31f0d67be",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7189_storage)",
              "src": "contracts/compile/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7189_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7189_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:25",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:26"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:85",
        "version": {
          "withMetadata": "7de635b236932acc4d198f70ca8af30e494a0069514c274db49b22d84372c227",
          "withoutMetadata": "1220343e68771a46aed2cee6589f8709186593a8bb0dce83a209b419b3301168",
          "linkedWithoutMetadata": "1220343e68771a46aed2cee6589f8709186593a8bb0dce83a209b419b3301168"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "_initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:94"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:442",
        "version": {
          "withMetadata": "88f4b8dadb0599854b92ae5728f6cd7d78bf741f385834a5feb3d5a0474e05e5",
          "withoutMetadata": "3c38d7b0f157f053df9a85f2a681db8dc0297a7dfec422b2c569f9f9255306dc",
          "linkedWithoutMetadata": "3c38d7b0f157f053df9a85f2a681db8dc0297a7dfec422b2c569f9f9255306dc"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "_initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:463"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:465"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:469"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:470"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:202",
        "version": {
          "withMetadata": "787978b8956bc06080c3b280a8962bb36e5d5db6613a93e993ebc4389a2cc7f7",
          "withoutMetadata": "f2bd9e969f3a11f9e2a0538a8f7b8b26350f764565d4b8742a26f79978d7561d",
          "linkedWithoutMetadata": "f2bd9e969f3a11f9e2a0538a8f7b8b26350f764565d4b8742a26f79978d7561d"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "_initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:206"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:211"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:904",
        "version": {
          "withMetadata": "ee924c0f09ed098c17c9bc6f251123bb273d40bbb40a349d17c79385b9777ff6",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:940"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:941"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:811",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7189_storage)",
              "src": "contracts/compile/slice_v0.sol:850"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7189_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7189_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:233"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:20",
        "version": {
          "withMetadata": "17ae2061efcc402a91348633b87068c3f6df0fe1ed8ca31e8d854d9b388548bc",
          "withoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c",
          "linkedWithoutMetadata": "b34cf3ddb4c396655a5497a03732a06f61e094adc34f70ad9208e14f3ab0ec1c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34",
        "version": {
          "withMetadata": "69c5bf0c41b93aa703c1609539c252f08d31c85951815bc19ccaace54ff5e8a6",
          "withoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5",
          "linkedWithoutMetadata": "29c8801ae6ab6c6891797e564b6337ae0bad5f9d8b6f32754d8766479b9070e5"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a806aadaf4f2bd0710bd85f1c50356422d7366a8e80c2cf9cd644af455be8d89",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:13",
        "version": {
          "withMetadata": "7c35436b971cb603af72659471418342b739d3e90215cb99851a8b32b1e418b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d6cc20e144ca6130dd273760a519bc13f3e94494f8aba4c41bdb9695a503c1b7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:17",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "withoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21",
          "linkedWithoutMetadata": "c05f6c308021dce14ed717b55f9fb468537a35b8afd869e86ff7a01012fccb21"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:29"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "6bdd9d82b9e14bb5717cdb22959793caa116b733bc2fdaaad1ccf76eb158133b",
          "withoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa",
          "linkedWithoutMetadata": "e3ae963b82c2181b7c88c5942a4297877a32635fd89b8e6550bfe35c71bf59aa"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:10",
        "version": {
          "withMetadata": "c88ddeee33b81542b677d9e58d6aaadd5b020cb3c5e03a541bc6712b4a4da3be",
          "withoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5",
          "linkedWithoutMetadata": "99c286af74ba59560410a6347211712124e5d78c962d2d2a4ff1df5d04a04ac5"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:11",
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "6bb58df5c7eb7fae9dc5c1dc358138fa8dd3c3f2e6d800093b5460117df3e56e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:13",
        "version": {
          "withMetadata": "69ae5f563772d3f84091e1ce000c7f5414fee4559f3a5fecc531fec31a87d490",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cdc84355611c1f07e160186986094b26d8ba8d02a18ae5ac5fd911fc38bbf12a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "42c967fbfb71d05a84c24592808d620b1d8f8b5fed35f5e52e62b011d0c63850",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableSlice": {
        "src": "contracts/compile/slice_v0.sol:25",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableSlice",
              "label": "_slice",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:26"
            },
            {
              "contract": "OwnableSlice",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:27"
            },
            {
              "contract": "OwnableSlice",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/compile/slice_v0.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SLC": {
        "src": "contracts/compile/slice_v0.sol:85",
        "version": {
          "withMetadata": "2fe835cb3e6ee6749bddc9e65b814992a8e2adbb422a2a337300e1318d64fb73",
          "withoutMetadata": "1220343e68771a46aed2cee6589f8709186593a8bb0dce83a209b419b3301168",
          "linkedWithoutMetadata": "1220343e68771a46aed2cee6589f8709186593a8bb0dce83a209b419b3301168"
        },
        "inherit": [
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "_mintSLC(address,uint256,uint32)",
          "_triggerMint(address,uint256,address,uint8)",
          "getServicePrice(uint32)",
          "_setServicePrice(uint32,uint256)",
          "_initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SLC",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:94"
            },
            {
              "contract": "SLC",
              "label": "_servicePrices",
              "type": "t_mapping(t_uint32,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slice": {
        "src": "contracts/compile/slice_v0.sol:441",
        "version": {
          "withMetadata": "1fef464f510cbc449abd63870203487bd0457711bb75ececc193a54e3ada50d7",
          "withoutMetadata": "3c38d7b0f157f053df9a85f2a681db8dc0297a7dfec422b2c569f9f9255306dc",
          "linkedWithoutMetadata": "3c38d7b0f157f053df9a85f2a681db8dc0297a7dfec422b2c569f9f9255306dc"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "Address"
        ],
        "methods": [
          "slice(address[],uint256[],uint256)",
          "triggerRelease(address,address[],uint8)",
          "payProducts(address payable[],uint256[],uint256[])",
          "getEthUsd()",
          "slicers(uint256)",
          "totalTokens()",
          "togglePause()",
          "_createSlicer(uint256,uint256)",
          "_beforeTransfer(address,address,address[],uint256[])",
          "_setMaximumBatch(uint8,uint8)",
          "_addToSliceCategory(uint32)",
          "_upgradeSlicers(address)",
          "_initialize(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slice",
              "label": "upgradeableBeacon",
              "type": "t_contract(UpgradeableBeacon)4032",
              "src": "contracts/compile/slice_v0.sol:462"
            },
            {
              "contract": "Slice",
              "label": "_SLCAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:464"
            },
            {
              "contract": "Slice",
              "label": "_sliceCoreAddress",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:465"
            },
            {
              "contract": "Slice",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/compile/slice_v0.sol:466"
            },
            {
              "contract": "Slice",
              "label": "_tokenIds",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:467"
            },
            {
              "contract": "Slice",
              "label": "_maximumSliceBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:468"
            },
            {
              "contract": "Slice",
              "label": "_maximumReleaseBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:469"
            }
          ],
          "types": {
            "t_contract(UpgradeableBeacon)4032": {
              "label": "contract UpgradeableBeacon"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SliceCore": {
        "src": "contracts/compile/slice_v0.sol:202",
        "version": {
          "withMetadata": "5960dca6ba8be9247f0f0546f5c76d1e61a0cfa53cdeba461cb163f62fe20469",
          "withoutMetadata": "c714aed32f4ba1cec1b7fb8554fff955b11fdce7ce6b2002c31f761efc044e26",
          "linkedWithoutMetadata": "c714aed32f4ba1cec1b7fb8554fff955b11fdce7ce6b2002c31f761efc044e26"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "PausableUpgradeable",
          "OwnableSlice",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "_mintSlice(address,uint256,uint256,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "slicerBatchTransfer(address,address[],uint256,uint256[])",
          "slicers(uint256)",
          "categoryAddress(uint32)",
          "_addCategory(address)",
          "_changeCategoryAddress(uint32,address)",
          "_setMaximumTransferBatch(uint8)",
          "_setBasePath(string)",
          "_togglePause()",
          "totalSupply(uint256)",
          "exists(uint256)",
          "_initialize()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_basePath",
            "src": "contracts/compile/slice_v0.sol:207"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SliceCore",
              "label": "_maximumTransferBatch",
              "type": "t_uint8",
              "src": "contracts/compile/slice_v0.sol:206"
            },
            {
              "contract": "SliceCore",
              "label": "_basePath",
              "type": "t_string_storage",
              "src": "contracts/compile/slice_v0.sol:207"
            },
            {
              "contract": "SliceCore",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:208"
            },
            {
              "contract": "SliceCore",
              "label": "_slicers",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:209"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryIndex",
              "type": "t_struct(Counter)3160_storage",
              "src": "contracts/compile/slice_v0.sol:210"
            },
            {
              "contract": "SliceCore",
              "label": "_categoryAddresses",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/compile/slice_v0.sol:211"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)3160_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Slicer": {
        "src": "contracts/compile/slice_v0.sol:903",
        "version": {
          "withMetadata": "cc3a01fe882f929e4d8b3f7fd0f99a113ea1220106cfa1e3b354279a41bb44df",
          "withoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4",
          "linkedWithoutMetadata": "0ee47c6bf4d230552429c5105abbb9f328944a70e0d2c56b20d79dce4a1dcda4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Pausable",
          "Context",
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "SlicerProducts"
        ],
        "libraries": [
          "Counters",
          "EnumerableSet",
          "Address"
        ],
        "methods": [
          "_initialize(uint256,address,uint256)",
          "_addPayees(address[],uint256[])",
          "_updatePayees(address,address,uint256)",
          "_addChildrenSlicer(uint256)",
          "release(address payable)",
          "addProduct(uint32,uint256,bool,bool,bool,uint256,bytes,bytes)",
          "setProductCategory(uint256,uint32)",
          "setProductInfo(uint256,bool,uint256,uint256)",
          "toggleUSDPrice(uint256,bool)",
          "removeProduct(uint256)",
          "_payProduct(address,uint256,uint256)",
          "validatePurchase(uint256)",
          "paySLC(uint32[],uint32[])",
          "()",
          "released(address)",
          "unreleased(address)",
          "slicerInfo()",
          "totalReceived()",
          "isPayeeAllowed(address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Slicer",
              "label": "_tokenId",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:932"
            },
            {
              "contract": "Slicer",
              "label": "_slicerCreator",
              "type": "t_address",
              "src": "contracts/compile/slice_v0.sol:933"
            },
            {
              "contract": "Slicer",
              "label": "_minimumShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:934"
            },
            {
              "contract": "Slicer",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:935"
            },
            {
              "contract": "Slicer",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/compile/slice_v0.sol:936"
            },
            {
              "contract": "Slicer",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/compile/slice_v0.sol:937"
            },
            {
              "contract": "Slicer",
              "label": "_released",
              "type": "t_mapping(t_address,t_array(t_uint256)2_storage)",
              "src": "contracts/compile/slice_v0.sol:938"
            },
            {
              "contract": "Slicer",
              "label": "_childrenSlicers",
              "type": "t_struct(UintSet)5179_storage",
              "src": "contracts/compile/slice_v0.sol:939"
            },
            {
              "contract": "Slicer",
              "label": "_productIds",
              "type": "t_struct(Counter)4615_storage",
              "src": "contracts/compile/slice_v0.sol:940"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)2_storage)": {
              "label": "mapping(address => uint256[2])"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]"
            },
            "t_struct(UintSet)5179_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4777_storage"
                }
              ]
            },
            "t_struct(Set)4777_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Counter)4615_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SlicerProducts": {
        "src": "contracts/compile/slice_v0.sol:810",
        "inherit": [],
        "libraries": [],
        "methods": [
          "productPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SlicerProducts",
              "label": "_products",
              "type": "t_mapping(t_uint256,t_struct(Product)7186_storage)",
              "src": "contracts/compile/slice_v0.sol:849"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)7186_storage)": {
              "label": "mapping(uint256 => struct SlicerProducts.Product)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Product)7186_storage": {
              "label": "struct SlicerProducts.Product",
              "members": [
                {
                  "label": "categoryIndex",
                  "type": "t_uint32"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isUSD",
                  "type": "t_bool"
                },
                {
                  "label": "isMultiple",
                  "type": "t_bool"
                },
                {
                  "label": "isInfinite",
                  "type": "t_bool"
                },
                {
                  "label": "availableUnits",
                  "type": "t_uint256"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchaseData",
                  "type": "t_bytes_storage"
                },
                {
                  "label": "purchases",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}